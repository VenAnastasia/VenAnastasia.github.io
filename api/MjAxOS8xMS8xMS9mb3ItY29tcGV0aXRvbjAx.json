{"title":"Loop Structure","date":"2019-11-11T02:04:44.000Z","date_formatted":{"ll":"2019年11月11日","L":"2019/11/11","MM-DD":"11-11"},"author":"Hard-working Anastasia","link":"2019/11/11/for-competiton01","comments":true,"tags":["To be professional"],"categories":["Beginning Algorithm Contests(2nd)","For competition"],"updated":"2020-01-18T12:27:25.957Z","content":"<html><head></head><body><p>Loop Structure</p>\n<a id=\"more\"></a>\n\n<h2 id=\"1-for循环\"><a href=\"2019/11/11/for-competiton01#1-for循环\" class=\"headerlink\" title=\"1. for循环\"></a>1. for循环</h2><h3 id=\"格式：for-初始化；条件；调整-循环体\"><a href=\"2019/11/11/for-competiton01#格式：for-初始化；条件；调整-循环体\" class=\"headerlink\" title=\"格式：for(初始化；条件；调整) 循环体;\"></a>格式：for(初始化；条件；调整) 循环体;</h3><h3 id=\"Tips：尽量缩短变量的定义范围。例如，在for循环的初始化部分定义循环变量。\"><a href=\"2019/11/11/for-competiton01#Tips：尽量缩短变量的定义范围。例如，在for循环的初始化部分定义循环变量。\" class=\"headerlink\" title=\"Tips：尽量缩短变量的定义范围。例如，在for循环的初始化部分定义循环变量。\"></a>Tips：尽量缩短变量的定义范围。例如，在for循环的初始化部分定义循环变量。</h3><h4 id=\"例题2-1-aabb\"><a href=\"2019/11/11/for-competiton01#例题2-1-aabb\" class=\"headerlink\" title=\"例题2-1 aabb:\"></a>例题2-1 aabb:</h4><h4 id=\"输出所有形如aabb的4位完全平方数。\"><a href=\"2019/11/11/for-competiton01#输出所有形如aabb的4位完全平方数。\" class=\"headerlink\" title=\"输出所有形如aabb的4位完全平方数。\"></a>输出所有形如aabb的4位完全平方数。</h4><h4 id=\"示例1：-7744\"><a href=\"2019/11/11/for-competiton01#示例1：-7744\" class=\"headerlink\" title=\"示例1：(7744)\"></a>示例1：(7744)</h4><figure class=\"highlight\"><figcaption><span>2-1 aabb(1)</span></figcaption><div><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\"><stdio.h></span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\"><math.h></span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>{</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> a=<span class=\"number\">1</span>;a<=<span class=\"number\">9</span>;a++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> b=<span class=\"number\">1</span>;b<=<span class=\"number\">9</span>;b++)</span><br><span class=\"line\">\t\t{</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> n=a\\*<span class=\"number\">1100</span>+b\\*<span class=\"number\">11</span>;  <span class=\"comment\">//这里才开始使用n，因此在这里定义n</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> m=<span class=\"built_in\">floor</span>(<span class=\"built_in\">sqrt</span>(n)+<span class=\"number\">0.5</span>);   <span class=\"comment\">//浮点数存在误差，采用四舍五入：floor(x+0.5)</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(m\\*m==n) <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,n);</span><br><span class=\"line\">\t\t}</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">}</span><br></pre></td></tr></tbody></table></div></figure>\n<h4 id=\"示例2：（枚举平方根x）\"><a href=\"2019/11/11/for-competiton01#示例2：（枚举平方根x）\" class=\"headerlink\" title=\"示例2：（枚举平方根x）\"></a>示例2：（枚举平方根x）</h4><figure class=\"highlight\"><figcaption><span>2-1 aabb(2)</span></figcaption><div><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\"><stdio.h></span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>{</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> x=<span class=\"number\">32</span>;;x++)      <span class=\"comment\">//31*31=961,32*32=1024</span></span><br><span class=\"line\">\t{</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> n=x\\*x;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(n><span class=\"number\">9999</span>) <span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> high=n/<span class=\"number\">100</span>;     <span class=\"comment\">//4位数前两位</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> low=n%<span class=\"number\">100</span>;      <span class=\"comment\">//4位数后两位</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(high/<span class=\"number\">10</span>==high%<span class=\"number\">10</span> && low/<span class=\"number\">10</span>==low%<span class=\"number\">10</span>) <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,n);     <span class=\"comment\">//判断前/后两位的高位和低位是否相等</span></span><br><span class=\"line\">\t}</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">}</span><br></pre></td></tr></tbody></table></div></figure>\n\n\n<h2 id=\"2-while循环\"><a href=\"2019/11/11/for-competiton01#2-while循环\" class=\"headerlink\" title=\"2. while循环\"></a>2. while循环</h2><h3 id=\"格式：-while-条件-循环体-调整\"><a href=\"2019/11/11/for-competiton01#格式：-while-条件-循环体-调整\" class=\"headerlink\" title=\"格式： while(条件) 循环体;调整;\"></a>格式： while(条件) 循环体;调整;</h3><h3 id=\"Tips-1-当需要统计某种事物的个数时，可以用一个变量来充当计数器；\"><a href=\"2019/11/11/for-competiton01#Tips-1-当需要统计某种事物的个数时，可以用一个变量来充当计数器；\" class=\"headerlink\" title=\"Tips: (1) 当需要统计某种事物的个数时，可以用一个变量来充当计数器；\"></a>Tips: (1) 当需要统计某种事物的个数时，可以用一个变量来充当计数器；</h3><h3 id=\"2-不要忘记测试。一个看上去正确的程序可能隐含错误。\"><a href=\"2019/11/11/for-competiton01#2-不要忘记测试。一个看上去正确的程序可能隐含错误。\" class=\"headerlink\" title=\"(2) 不要忘记测试。一个看上去正确的程序可能隐含错误。\"></a>(2) 不要忘记测试。一个看上去正确的程序可能隐含错误。</h3><h3 id=\"3-在观察无法找出错误时，可以用“输出中间结果”的方法查错。\"><a href=\"2019/11/11/for-competiton01#3-在观察无法找出错误时，可以用“输出中间结果”的方法查错。\" class=\"headerlink\" title=\"(3) 在观察无法找出错误时，可以用“输出中间结果”的方法查错。\"></a>(3) 在观察无法找出错误时，可以用“输出中间结果”的方法查错。</h3><h4 id=\"例题2-2-3n-1问题\"><a href=\"2019/11/11/for-competiton01#例题2-2-3n-1问题\" class=\"headerlink\" title=\"例题2-2 3n+1问题:\"></a>例题2-2 3n+1问题:</h4><h4 id=\"猜想：对于任意大于1的自然数n，若n为奇数，则将n变为3n-1，否则变为n的一半。经过若干次这样的变换，一定会使n变为1。例如，3→10→5→16→8→4→2→1。输入n，输出变换的次数。n≤10⁹。\"><a href=\"2019/11/11/for-competiton01#猜想：对于任意大于1的自然数n，若n为奇数，则将n变为3n-1，否则变为n的一半。经过若干次这样的变换，一定会使n变为1。例如，3→10→5→16→8→4→2→1。输入n，输出变换的次数。n≤10⁹。\" class=\"headerlink\" title=\"猜想：对于任意大于1的自然数n，若n为奇数，则将n变为3n+1，否则变为n的一半。经过若干次这样的变换，一定会使n变为1。例如，3→10→5→16→8→4→2→1。输入n，输出变换的次数。n≤10⁹。\"></a>猜想：对于任意大于1的自然数n，若n为奇数，则将n变为3n+1，否则变为n的一半。经过若干次这样的变换，一定会使n变为1。例如，3→10→5→16→8→4→2→1。输入n，输出变换的次数。n≤10⁹。</h4><h4 id=\"示例：-3-gt-7\"><a href=\"2019/11/11/for-competiton01#示例：-3-gt-7\" class=\"headerlink\" title=\"示例：(3->7)\"></a>示例：(3->7)</h4><figure class=\"highlight\"><figcaption><span>2-2 3n+1</span></figcaption><div><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\"><stdio.h></span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>{</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> n2,count=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&n2);</span><br><span class=\"line\">\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> n=n2;     <span class=\"comment\">//解决n=987654321溢出问题，一般比赛平台上int都是32位整数</span></span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(n><span class=\"number\">1</span>)</span><br><span class=\"line\">\t{</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(n%<span class=\"number\">2</span>==<span class=\"number\">1</span>) n=n\\*<span class=\"number\">3</span>+<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> n/=<span class=\"number\">2</span>;</span><br><span class=\"line\">\t\tcount++;</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,count);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">}</span><br></pre></td></tr></tbody></table></div></figure>\n<h4 id=\"例题2-3-近似计算：\"><a href=\"2019/11/11/for-competiton01#例题2-3-近似计算：\" class=\"headerlink\" title=\"例题2-3 近似计算：\"></a>例题2-3 近似计算：</h4><h4 id=\"示例：-0-785399\"><a href=\"2019/11/11/for-competiton01#示例：-0-785399\" class=\"headerlink\" title=\"示例：(0.785399)\"></a>示例：(0.785399)</h4><figure class=\"highlight\"><figcaption><span>2-3 近似计算</span></figcaption><div><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\"><stdio.h></span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>{</span><br><span class=\"line\">\t<span class=\"keyword\">double</span> sum=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;;i++)</span><br><span class=\"line\">\t{</span><br><span class=\"line\">\t\t<span class=\"keyword\">double</span> term=<span class=\"number\">1.0</span>/(i\\*<span class=\"number\">2</span>+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(i%<span class=\"number\">2</span>==<span class=\"number\">0</span>) sum+=term;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> sum-=term;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(term<<span class=\"number\">1e-6</span>) <span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%.6f\\n\"</span>,sum);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">}</span><br></pre></td></tr></tbody></table></div></figure>\n\n<h2 id=\"3-循环的代价\"><a href=\"2019/11/11/for-competiton01#3-循环的代价\" class=\"headerlink\" title=\"3.循环的代价\"></a>3.循环的代价</h2><h3 id=\"例题2-4-阶乘之和：\"><a href=\"2019/11/11/for-competiton01#例题2-4-阶乘之和：\" class=\"headerlink\" title=\"例题2-4 阶乘之和：\"></a>例题2-4 阶乘之和：</h3><h4 id=\"输入n，计算S-1-2-3！-……-n！的末6位（不含前导0）。n-lt-（10的6次方），n！表示前n个正整数之积。\"><a href=\"2019/11/11/for-competiton01#输入n，计算S-1-2-3！-……-n！的末6位（不含前导0）。n-lt-（10的6次方），n！表示前n个正整数之积。\" class=\"headerlink\" title=\"输入n，计算S=1!+2!+3！+……+n！的末6位（不含前导0）。n<=（10的6次方），n！表示前n个正整数之积。\"></a>输入n，计算S=1!+2!+3！+……+n！的末6位（不含前导0）。n<=（10的6次方），n！表示前n个正整数之积。</h4><h4 id=\"示例：-10-gt-37913\"><a href=\"2019/11/11/for-competiton01#示例：-10-gt-37913\" class=\"headerlink\" title=\"示例：(10->37913)\"></a>示例：(10->37913)</h4><figure class=\"highlight\"><figcaption><span>2-4 阶乘之和(1)</span></figcaption><div><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\"><stdio.h></span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>{</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> n,S=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&n);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i<=n;i++)</span><br><span class=\"line\">\t{</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> factorial=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j<=i;j++)\t\t</span><br><span class=\"line\">\t\t\tfactorial\\*=j;</span><br><span class=\"line\">\t\tS+=factorial;\t\t</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,S%<span class=\"number\">1000000</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">}</span><br></pre></td></tr></tbody></table></div></figure>\n<h3 id=\"Tips-循环程序最常见的两个问题——算术运算溢出-和-程序效率低下。分析方法：输出中间结果；计时函数。\"><a href=\"2019/11/11/for-competiton01#Tips-循环程序最常见的两个问题——算术运算溢出-和-程序效率低下。分析方法：输出中间结果；计时函数。\" class=\"headerlink\" title=\"Tips: 循环程序最常见的两个问题——算术运算溢出 和 程序效率低下。分析方法：输出中间结果；计时函数。\"></a>Tips: 循环程序最常见的两个问题——算术运算溢出 和 程序效率低下。分析方法：输出中间结果；计时函数。</h3><h3 id=\"计时函数的使用：-1-头文件-include-lt-time-h-gt\"><a href=\"2019/11/11/for-competiton01#计时函数的使用：-1-头文件-include-lt-time-h-gt\" class=\"headerlink\" title=\"计时函数的使用：(1) 头文件 #include<time.h>;\"></a>计时函数的使用：(1) 头文件 #include<time.h>;</h3><h3 id=\"2-clock-CLOCKS-PER-SEC-LOCKS-PER-SEC和操作系统相关，除以它得到的值以“秒”为单位\"><a href=\"2019/11/11/for-competiton01#2-clock-CLOCKS-PER-SEC-LOCKS-PER-SEC和操作系统相关，除以它得到的值以“秒”为单位\" class=\"headerlink\" title=\"(2) clock()/CLOCKS_PER_SEC (LOCKS_PER_SEC和操作系统相关，除以它得到的值以“秒”为单位)\"></a>(2) clock()/CLOCKS_PER_SEC (LOCKS_PER_SEC和操作系统相关，除以它得到的值以“秒”为单位)</h3><h4 id=\"修改版\"><a href=\"2019/11/11/for-competiton01#修改版\" class=\"headerlink\" title=\"修改版:\"></a>修改版:</h4><figure class=\"highlight\"><figcaption><span>2-4 阶乘之和(2)</span></figcaption><div><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\"><stdio.h></span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\"><time.h></span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>{</span><br><span class=\"line\">\t<span class=\"keyword\">const</span> <span class=\"keyword\">int</span> MOD=<span class=\"number\">1000000</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> n,S=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&n);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(n><span class=\"number\">25</span>) n=<span class=\"number\">25</span>;       <span class=\"comment\">//防止溢出问题</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i<=n;i++)</span><br><span class=\"line\">\t{</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> factorial=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j<=i;j++)\t\t</span><br><span class=\"line\">\t\t\tfactorial=(factorial\\*j%MOD);</span><br><span class=\"line\">\t\tS=(S+factorial)%MOD;\t\t</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,S%<span class=\"number\">1000000</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"Time used = %.2f\\n\"</span>,(<span class=\"keyword\">double</span>)clock() /CLOCKS_PER_SEC)</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">}</span><br></pre></td></tr></tbody></table></div></figure>\n\n<h2 id=\"4-算法竞赛中的输入输出框架\"><a href=\"2019/11/11/for-competiton01#4-算法竞赛中的输入输出框架\" class=\"headerlink\" title=\"4.算法竞赛中的输入输出框架\"></a>4.算法竞赛中的输入输出框架</h2><h3 id=\"Tips-1-变量在未赋值之前的值是不确定的，它不一定等于0。\"><a href=\"2019/11/11/for-competiton01#Tips-1-变量在未赋值之前的值是不确定的，它不一定等于0。\" class=\"headerlink\" title=\"Tips: (1) 变量在未赋值之前的值是不确定的，它不一定等于0。\"></a>Tips: (1) 变量在未赋值之前的值是不确定的，它不一定等于0。</h3><h3 id=\"2-使用文件的方法——使用输入输出重定向，在mian函数的入口处加入：freopen-“input-txt”-”r”-stdin-freopen-“output-txt”-”w”-stdout\"><a href=\"2019/11/11/for-competiton01#2-使用文件的方法——使用输入输出重定向，在mian函数的入口处加入：freopen-“input-txt”-”r”-stdin-freopen-“output-txt”-”w”-stdout\" class=\"headerlink\" title=\"(2) 使用文件的方法——使用输入输出重定向，在mian函数的入口处加入：freopen(“input.txt”,”r”,stdin); freopen(“output.txt”,”w”,stdout)\"></a>(2) 使用文件的方法——使用输入输出重定向，在mian函数的入口处加入：freopen(“input.txt”,”r”,stdin); freopen(“output.txt”,”w”,stdout)</h3><h3 id=\"例2-5-数据统计：\"><a href=\"2019/11/11/for-competiton01#例2-5-数据统计：\" class=\"headerlink\" title=\"例2-5 数据统计：\"></a>例2-5 数据统计：</h3><h4 id=\"输入一些整数，求出它们的最小值、最大值和平均值（保留3位小数）。输入保证这些数都是不超过1000的整数。\"><a href=\"2019/11/11/for-competiton01#输入一些整数，求出它们的最小值、最大值和平均值（保留3位小数）。输入保证这些数都是不超过1000的整数。\" class=\"headerlink\" title=\"输入一些整数，求出它们的最小值、最大值和平均值（保留3位小数）。输入保证这些数都是不超过1000的整数。\"></a>输入一些整数，求出它们的最小值、最大值和平均值（保留3位小数）。输入保证这些数都是不超过1000的整数。</h4><h4 id=\"示例1（重定向版）：\"><a href=\"2019/11/11/for-competiton01#示例1（重定向版）：\" class=\"headerlink\" title=\"示例1（重定向版）：\"></a>示例1（重定向版）：</h4><figure class=\"highlight\"><figcaption><span>2-5 数据统计（重定向版）</span></figcaption><div><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> LOCAL   <span class=\"comment\">//若比赛要求使用标准I/O，删除此句 or 使用条件编译指令</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\"><stdio.h></span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> INF 1000000000</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>{</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> LOCAL       <span class=\"comment\">//只有定义了符号LOCAL，才编译两条freopen语句——条件编译</span></span></span><br><span class=\"line\">\tfreopen(<span class=\"string\">\"data.in\"</span>,<span class=\"string\">\"r\"</span>,<span class=\"string\">\"stdin\"</span>);</span><br><span class=\"line\">\tfreopen(<span class=\"string\">\"data.out\"</span>,<span class=\"string\">\"w\"</span>,<span class=\"string\">\"stdout\"</span>);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> x,n=<span class=\"number\">0</span>,<span class=\"built_in\">min</span>=INF,<span class=\"built_in\">max</span>=-INF,s=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&x)==<span class=\"number\">1</span>)</span><br><span class=\"line\">\t{</span><br><span class=\"line\">\t\ts+=x;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(x<<span class=\"built_in\">min</span>) <span class=\"built_in\">min</span>=x;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(x><span class=\"built_in\">max</span>) <span class=\"built_in\">max</span>=x;</span><br><span class=\"line\">/\\*  输出中间结果</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"x=%d,min=%d,max=%d\\n\"</span>,z,<span class=\"built_in\">min</span>,<span class=\"built_in\">max</span>);</span><br><span class=\"line\">\\*/</span><br><span class=\"line\">\tn++;</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d %d %.3f\\n\"</span>,<span class=\"built_in\">min</span>,<span class=\"built_in\">max</span>,(<span class=\"keyword\">double</span>)s/n);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">}</span><br></pre></td></tr></tbody></table></div></figure>\n<h4 id=\"示例2：（fopen版）\"><a href=\"2019/11/11/for-competiton01#示例2：（fopen版）\" class=\"headerlink\" title=\"示例2：（fopen版）\"></a>示例2：（fopen版）</h4><figure class=\"highlight\"><figcaption><span>2-5 数据统计（fopen版）</span></figcaption><div><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\"><stdio.h></span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> INF 1000000000</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>{</span><br><span class=\"line\">\tFILE \\*fin,\\*fout;</span><br><span class=\"line\">\tfin=fopen(<span class=\"string\">\"data.in\"</span>,<span class=\"string\">\"rb\"</span>);</span><br><span class=\"line\">\tfout=fopen(<span class=\"string\">\"data.out\"</span>,<span class=\"string\">\"wb\"</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> x,n=<span class=\"number\">0</span>,<span class=\"built_in\">min</span>=INF,<span class=\"built_in\">max</span>=-INF,s=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(<span class=\"built_in\">fscanf</span>(fin,<span class=\"string\">\"%d\"</span>,&x)==<span class=\"number\">1</span>)</span><br><span class=\"line\">\t{</span><br><span class=\"line\">\t\ts+=x;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(x<<span class=\"built_in\">min</span>) <span class=\"built_in\">min</span>=x;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(x><span class=\"built_in\">max</span>) <span class=\"built_in\">max</span>=x;</span><br><span class=\"line\">\t\tn++;</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\t<span class=\"built_in\">fprintf</span>(fout,<span class=\"string\">\"%d %d %.3f\\n\"</span>,<span class=\"built_in\">min</span>,<span class=\"built_in\">max</span>,(<span class=\"keyword\">double</span>)s/n);</span><br><span class=\"line\">\tfclose(fin);</span><br><span class=\"line\">\tfclose(fout);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">/\\*改写为标准I/O，只需赋值“fin=<span class=\"built_in\">stdin</span>;fout=<span class=\"built_in\">stdout</span>;<span class=\"string\">\"即可。</span></span><br><span class=\"line\"><span class=\"string\">fopen(\"</span>con<span class=\"string\">\",\"</span>r<span class=\"string\">\")不可移植——在Linux下无效</span></span><br><span class=\"line\"><span class=\"string\">\\*/</span></span><br><span class=\"line\"><span class=\"string\">}</span></span><br></pre></td></tr></tbody></table></div></figure>\n\n<h3 id=\"例2-6-数据统计Ⅱ\"><a href=\"2019/11/11/for-competiton01#例2-6-数据统计Ⅱ\" class=\"headerlink\" title=\"例2-6 数据统计Ⅱ\"></a>例2-6 数据统计Ⅱ</h3><h3 id=\"输入一些整数，求出它们的最小值、最大值和平均值（保留3位小数）。输入保证这些数都是不超过1000的数。输入包含多组数据，每组数据第一行是整数个数n，第二行是n个整数。n-0为输入结束标记，程序应当忽略这组数据。相邻两组数据之间应输入一个空行。\"><a href=\"2019/11/11/for-competiton01#输入一些整数，求出它们的最小值、最大值和平均值（保留3位小数）。输入保证这些数都是不超过1000的数。输入包含多组数据，每组数据第一行是整数个数n，第二行是n个整数。n-0为输入结束标记，程序应当忽略这组数据。相邻两组数据之间应输入一个空行。\" class=\"headerlink\" title=\"输入一些整数，求出它们的最小值、最大值和平均值（保留3位小数）。输入保证这些数都是不超过1000的数。输入包含多组数据，每组数据第一行是整数个数n，第二行是n个整数。n=0为输入结束标记，程序应当忽略这组数据。相邻两组数据之间应输入一个空行。\"></a>输入一些整数，求出它们的最小值、最大值和平均值（保留3位小数）。输入保证这些数都是不超过1000的数。输入包含多组数据，每组数据第一行是整数个数n，第二行是n个整数。n=0为输入结束标记，程序应当忽略这组数据。相邻两组数据之间应输入一个空行。</h3><p>样例输入：<br> 8<br> 2 8 3 5 1 7 3 6<br> 4<br> -4 6 10 0<br> 0<br> 样例输出：<br> Case 1：1 8 4.375<br> Case 2：-4 10 3.000</p>\n<figure class=\"highlight\"><figcaption><span>2-6 数据统计Ⅱ</span></figcaption><div><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\"><stdio.h></span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> INF 1000000000</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>{</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> x,n=<span class=\"number\">0</span>,s=<span class=\"number\">0</span>,kase=<span class=\"number\">0</span>;  </span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&n)==<span class=\"number\">1</span> && n)    </span><br><span class=\"line\"><span class=\"comment\">//  n为输入标记，判断scanf的返回值是为了增加程序的“鲁棒性”(robustness)即健壮性</span></span><br><span class=\"line\">\t{</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> s=<span class=\"number\">0</span>;        <span class=\"comment\">//求和</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> <span class=\"built_in\">min</span>=INF,<span class=\"built_in\">max</span>=-INF;   <span class=\"comment\">//变量重置！！！</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i<n;i++)</span><br><span class=\"line\">\t\t{</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&x);     </span><br><span class=\"line\">\t\t\ts+=x;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(x<<span class=\"built_in\">min</span>) <span class=\"built_in\">min</span>=x;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(x><span class=\"built_in\">max</span>) <span class=\"built_in\">max</span>=x;</span><br><span class=\"line\">\t\t}</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(kase) <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n\"</span>);    <span class=\"comment\">//加空行</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"Case %d: %d %d %.3f\\n\"</span>,++kase,<span class=\"built_in\">max</span>,<span class=\"built_in\">min</span>,(<span class=\"keyword\">double</span>)s/n); </span><br><span class=\"line\">\t}</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">}</span><br></pre></td></tr></tbody></table></div></figure>\n\n</body></html>","prev":{"title":"Sentence Patterns 03","link":"2019/11/11/sentence03"},"next":{"title":"Sentence Patterns 02","link":"2019/11/08/sentence02"},"plink":"https://VenAnastasia.github.io/2019/11/11/for-competiton01/","toc":[{"title":"","id":"1-for循环","index":"1","children":[{"title":"","id":"格式：for-初始化；条件；调整-循环体","index":"1.1"},{"title":"","id":"Tips：尽量缩短变量的定义范围。例如，在for循环的初始化部分定义循环变量。","index":"1.2","children":[{"title":"","id":"例题2-1-aabb","index":"1.2.1"},{"title":"","id":"输出所有形如aabb的4位完全平方数。","index":"1.2.2"},{"title":"","id":"示例1：-7744","index":"1.2.3"},{"title":"","id":"示例2：（枚举平方根x）","index":"1.2.4"}]}]},{"title":"","id":"2-while循环","index":"2","children":[{"title":"","id":"格式：-while-条件-循环体-调整","index":"2.1"},{"title":"","id":"Tips-1-当需要统计某种事物的个数时，可以用一个变量来充当计数器；","index":"2.2"},{"title":"","id":"2-不要忘记测试。一个看上去正确的程序可能隐含错误。","index":"2.3"},{"title":"","id":"3-在观察无法找出错误时，可以用“输出中间结果”的方法查错。","index":"2.4","children":[{"title":"","id":"例题2-2-3n-1问题","index":"2.4.1"},{"title":"","id":"猜想：对于任意大于1的自然数n，若n为奇数，则将n变为3n-1，否则变为n的一半。经过若干次这样的变换，一定会使n变为1。例如，3→10→5→16→8→4→2→1。输入n，输出变换的次数。n≤10⁹。","index":"2.4.2"},{"title":"","id":"示例：-3-gt-7","index":"2.4.3"},{"title":"","id":"例题2-3-近似计算：","index":"2.4.4"},{"title":"","id":"示例：-0-785399","index":"2.4.5"}]}]},{"title":"","id":"3-循环的代价","index":"3","children":[{"title":"","id":"例题2-4-阶乘之和：","index":"3.1","children":[{"title":"","id":"输入n，计算S-1-2-3！-……-n！的末6位（不含前导0）。n-lt-（10的6次方），n！表示前n个正整数之积。","index":"3.1.1"},{"title":"","id":"示例：-10-gt-37913","index":"3.1.2"}]},{"title":"","id":"Tips-循环程序最常见的两个问题——算术运算溢出-和-程序效率低下。分析方法：输出中间结果；计时函数。","index":"3.2"},{"title":"","id":"计时函数的使用：-1-头文件-include-lt-time-h-gt","index":"3.3"},{"title":"","id":"2-clock-CLOCKS-PER-SEC-LOCKS-PER-SEC和操作系统相关，除以它得到的值以“秒”为单位","index":"3.4","children":[{"title":"","id":"修改版","index":"3.4.1"}]}]},{"title":"","id":"4-算法竞赛中的输入输出框架","index":"4","children":[{"title":"","id":"Tips-1-变量在未赋值之前的值是不确定的，它不一定等于0。","index":"4.1"},{"title":"","id":"2-使用文件的方法——使用输入输出重定向，在mian函数的入口处加入：freopen-“input-txt”-”r”-stdin-freopen-“output-txt”-”w”-stdout","index":"4.2"},{"title":"","id":"例2-5-数据统计：","index":"4.3","children":[{"title":"","id":"输入一些整数，求出它们的最小值、最大值和平均值（保留3位小数）。输入保证这些数都是不超过1000的整数。","index":"4.3.1"},{"title":"","id":"示例1（重定向版）：","index":"4.3.2"},{"title":"","id":"示例2：（fopen版）","index":"4.3.3"}]},{"title":"","id":"例2-6-数据统计Ⅱ","index":"4.4"},{"title":"","id":"输入一些整数，求出它们的最小值、最大值和平均值（保留3位小数）。输入保证这些数都是不超过1000的数。输入包含多组数据，每组数据第一行是整数个数n，第二行是n个整数。n-0为输入结束标记，程序应当忽略这组数据。相邻两组数据之间应输入一个空行。","index":"4.5"}]}],"reward":true,"copyright":{"author":"Hard-working Anastasia","license":"No permission to reproduce. Anastasia only.😎","updated":"2020年1月18日"}}