{"title":"换行与回车的区别","date":"2020-02-27T13:17:14.000Z","date_formatted":{"ll":"2020年2月27日","L":"2020/02/27","MM-DD":"02-27"},"author":"Clever Anastasia","thumbnail":"https://s1.ax1x.com/2020/03/17/8agp0P.png","link":"2020/02/27/zaliang02","comments":true,"tags":["To be professional"],"categories":["杂粮库"],"updated":"2020-03-17T14:19:46.292Z","content":"<h2 id=\"名词解释\">名词解释<a href=\"#名词解释\" title=\"名词解释\"></a></h2><div class=\"φcz\"><div class=\"φdb\"><table><thead><tr>\n<th>名词</th><th>转义字符</th><th>对应的英文</th><th>本义</th><th>控制字符</th></tr>\n</thead><tbody><tr>\n<td>回车</td><td>\\r</td><td>return</td><td>光标重新回到本行的开头</td><td>CR(Carriage Return)</td></tr>\n<tr>\n<td>换行</td><td>\\n</td><td>newline</td><td>光标往下一行（<strong>不一定到行首</strong>）</td><td>LF(Line Feed)</td></tr>\n</tbody></table></div></div><h2 id=\"使用情况\">使用情况<a href=\"#使用情况\" title=\"使用情况\"></a></h2><ul><li>CR：Maclntosh</li><li>LF：Unix/Linux/MacOS</li><li>CRLF：Windows</li></ul><h2 id=\"背景（野史）\">背景（野史）<a href=\"#背景（野史）\" title=\"背景（野史）\"></a></h2><p>在计算机出现之前，人们使用打字机时，打字机每秒可以打10个字符，而换行需要0.2秒，此段时间会出现字符丢失。研制人员为了解决这个问题，就在每行后面加上两个表示结束的字符。LF会将打印纸张上移一行位置（feed有“进料”的含义），但是保持当前打字的水平位置不变；CR则会将“Carriage”（打字机上的滚动托架）滚回到打印纸张的最左侧，但是保持当前打字的垂直位置不变，即还是在同一行。<br>当CR和LF组合使用时，则会将打印纸张上移一行，且下一个打字位置将回到该行的最左侧，也就是我们今天所理解的换行操作。</p>\n<p>当计算机出现之后，受限于当时内存和软盘空间的不足，一些操作系统的设计者决定采用单个字符来表示换行符，如Unix的LF、MacIntosh（Mac早期的操作系统）的CR。</p>\n<h2 id=\"踩过的坑\">踩过的坑<a href=\"#踩过的坑\" title=\"踩过的坑\"></a></h2><h3 id=\"hexo警告：lf-will-be-replaced-by-crlf\">hexo警告：LF will be replaced by CRLF<a href=\"#hexo警告：lf-will-be-replaced-by-crlf\" title=\"hexo警告：LF will be replaced by CRLF\"></a></h3><ul><li>git工作区默认为CRLF来作为换行符</li><li>解决方式：<br>1. 这个只是一个警告，我们直接忽略就好。<br>2. git config –global core.autocrlf false //禁用自动转换</li></ul><h2 id=\"扩展：硬回车和软回车\">扩展：硬回车和软回车<a href=\"#扩展：硬回车和软回车\" title=\"扩展：硬回车和软回车\"></a></h2><ul><li>硬回车就是普通我们按回车产生的，它在换行的同时也起着段落分隔的作用。</li><li>软回车是用 Shift + Enter 产生的，它换行，但是并不换段，即前后两段文字在 Word 中属于同一“段”。在应用格式时你会体会到这一点。软回车能使前后两行的行间距大幅度缩小，因为它不是段落标记，要和法定的段落标记——硬回车区别出来。硬回车的html代码是<code>&lt;p&gt;..&lt;/p&gt;</code>，段落的内容就夹在里面，而软回车的代码很精悍：<code>&lt;br&gt;</code>。网页的文字如果复制到word中，则硬回车变为弯曲的箭头，软回车变为向下的箭头。</li></ul>","prev":{"title":"Java中floorMod方法的理解","link":"2020/02/28/zaliang03"},"next":{"title":"为什么是String[] args而非String args[]？","link":"2020/02/01/zaliang01"},"plink":"https://venanastasia.github.io/2020/02/27/zaliang02/","toc":[{"id":"名词解释","title":"名词解释","index":"1"},{"id":"使用情况","title":"使用情况","index":"2"},{"id":"背景（野史）","title":"背景（野史）","index":"3"},{"id":"踩过的坑","title":"踩过的坑","index":"4","children":[{"id":"hexo警告：lf-will-be-replaced-by-crlf","title":"hexo警告：LF will be replaced by CRLF","index":"4.1"}]},{"id":"扩展：硬回车和软回车","title":"扩展：硬回车和软回车","index":"5"}],"reward":true,"copyright":{"author":"Clever Anastasia","license":"No permission to reproduce. Anastasia only.😎"}}