<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>云边拾鹄</title>
  
  <subtitle>program, reading, life</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://venanastasia.github.io/"/>
  <updated>2020-05-12T10:15:17.731Z</updated>
  <id>https://venanastasia.github.io/</id>
  
  <author>
    <name>Anastasia</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>动词短语——Actions with an object</title>
    <link href="https://venanastasia.github.io/2020/05/12/phraverbs02/"/>
    <id>https://venanastasia.github.io/2020/05/12/phraverbs02/</id>
    <published>2020-05-12T08:49:27.000Z</published>
    <updated>2020-05-12T10:15:17.731Z</updated>
    
    <content type="html"><![CDATA[<p>参考书目：《Work on Your Phrasal Verbs》</p><a id="more"></a><h2 id="let-in">let in<a title="#let-in" href="#let-in"></a></h2><h2 id="light-up">light up<a title="#light-up" href="#light-up"></a></h2><p>eg. The match <strong>lit up</strong> her face.</p><h2 id="look-for">look for<a title="#look-for" href="#look-for"></a></h2><h2 id="pick-up">pick up<a title="#pick-up" href="#pick-up"></a></h2><p>= lift up</p><h2 id="put-back">put back<a title="#put-back" href="#put-back"></a></h2><h2 id="put-down">put down<a title="#put-down" href="#put-down"></a></h2><p>= set down<br><code>opposite: pick up</code></p><h2 id="put-in">put in<a title="#put-in" href="#put-in"></a></h2><blockquote><p>put one thing inside another thing</p></blockquote><p>eg. He stood at the slot machine and put a coin in.</p><h2 id="put-together">put together<a title="#put-together" href="#put-together"></a></h2><p>eg. I have all the parts here —— I just need to put them together.<br><code>opposite: take part</code></p><h2 id="put-up">put up<a title="#put-up" href="#put-up"></a></h2><blockquote><p>move to a higher position</p></blockquote><p>eg. Anna put her feet up on the desk.</p><h2 id="take-away">take away<a title="#take-away" href="#take-away"></a></h2><blockquote><p>remove it from a place and put it somewhere else</p></blockquote><p><code>opposite: put back</code></p><h2 id="take-back">take back<a title="#take-back" href="#take-back"></a></h2><blockquote><p>take it to the place where you were or where it was before</p></blockquote><p>eg. I filled a plastic bottle with water and took it back to the car.</p><h2 id="take-into">take into<a title="#take-into" href="#take-into"></a></h2><p>eg. I will take you into the town if you like.</p><h2 id="throw-at">throw at<a title="#throw-at" href="#throw-at"></a></h2><h2 id="throw-away">throw away<a title="#throw-away" href="#throw-away"></a></h2><blockquote><p>get rid of it because you no longer want or need it</p></blockquote><p>eg. I can make soup with the leftover chicken, so don’t throw it away.</p><h2 id="throw-in">throw in<a title="#throw-in" href="#throw-in"></a></h2><blockquote><p>put or drop it into something such as a container or mixture</p></blockquote><p>eg. I threw it in a drawer and forgot about it.</p><h2 id="throw-out">throw out<a title="#throw-out" href="#throw-out"></a></h2><blockquote><ol><li>throw it so that it moves quickly away from you</li></ol></blockquote><p>eg. The fishman threw the net out and could not pull it back in.</p><blockquote><ol start="2"><li>get rid of it<br><code>= throw away</code></li></ol></blockquote><p>eg. They threw out the rubbish.</p><h2 id="turn-off">turn off<a title="#turn-off" href="#turn-off"></a></h2><h2 id="turn-on">turn on<a title="#turn-on" href="#turn-on"></a></h2><p>= switch on</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;参考书目：《Work on Your Phrasal Verbs》&lt;/p&gt;
    
    </summary>
    
    
      <category term="Prasal Verbs" scheme="https://venanastasia.github.io/categories/Prasal-Verbs/"/>
    
    
      <category term="Loving English" scheme="https://venanastasia.github.io/tags/Loving-English/"/>
    
  </entry>
  
  <entry>
    <title>动词短语——Basic Verbs</title>
    <link href="https://venanastasia.github.io/2020/05/11/phraverbs01/"/>
    <id>https://venanastasia.github.io/2020/05/11/phraverbs01/</id>
    <published>2020-05-11T07:49:38.000Z</published>
    <updated>2020-05-12T10:00:16.467Z</updated>
    
    <content type="html"><![CDATA[<p>参考书目：《Work on Your Phrasal Verbs》</p><a id="more"></a><h2 id="fall-down">fall down<a title="#fall-down" href="#fall-down"></a></h2><p>eg. He tripped and fell down.</p><h2 id="get-off">get off<a title="#get-off" href="#get-off"></a></h2><blockquote><p>move your body from it, usually onto the ground</p></blockquote><p>eg. He got off his bicycle.</p><h2 id="get-out">get out<a title="#get-out" href="#get-out"></a></h2><blockquote><p>leave a place or a vehicle</p></blockquote><p>eg. We got out of the car.</p><h2 id="get-up">get up<a title="#get-up" href="#get-up"></a></h2><blockquote><ol><li>move from a lower position or level to a higher one</li></ol></blockquote><p>eg. By the time we’d got up tp the top of the hill, we were exhausted.</p><blockquote><ol start="2"><li>rise to a standing position after you have been sitting or lying down</li></ol></blockquote><p>eg. He got up off the floor.</p><blockquote><ol start="3"><li>get out of the bed</li></ol></blockquote><h2 id="go-back">go back<a title="#go-back" href="#go-back"></a></h2><blockquote><p>return to a place where you were before</p></blockquote><p>eg. It started to rain so I went back for my umbrella.</p><h2 id="go-in">go in<a title="#go-in" href="#go-in"></a></h2><h2 id="go-into">go into<a title="#go-into" href="#go-into"></a></h2><p><code>opposite: go out</code></p><h2 id="go-off">go off<a title="#go-off" href="#go-off"></a></h2><blockquote><p>leave the place where you were, usually in order to do something</p></blockquote><p>eg. He’s gone off to work.</p><h2 id="keep-down">keep down<a title="#keep-down" href="#keep-down"></a></h2><blockquote><p>stay in a lying or low position in order to avoid being seen or attacked</p></blockquote><p>eg. The soilder signalled to him to keep down.</p><h2 id="lay-down">lay down<a title="#lay-down" href="#lay-down"></a></h2><p>eg. He laid the baby gently down on the changing table.</p><h2 id="move-up">move up<a title="#move-up" href="#move-up"></a></h2><blockquote><p>go from a lower place to a higher one</p></blockquote><p>eg. The sun had moved up in the sky.</p><h2 id="run-in">run in<a title="#run-in" href="#run-in"></a></h2><h2 id="run-into">run into<a title="#run-into" href="#run-into"></a></h2><h2 id="run-on">run on<a title="#run-on" href="#run-on"></a></h2><blockquote><p>continue to run in the same direction</p></blockquote><p>eg. I ran on ahead.</p><h2 id="run-out">run out<a title="#run-out" href="#run-out"></a></h2><blockquote><ol><li>leave it, running</li></ol></blockquote><blockquote><ol start="2"><li>If a substance runs out from somewhere, it flows from there.</li></ol></blockquote><p>eg. Water was running out from under the front door of the house.</p><h2 id="sit-down">sit down<a title="#sit-down" href="#sit-down"></a></h2><p>eg. She sat herself down beside me.</p><h2 id="stand-up">stand up<a title="#stand-up" href="#stand-up"></a></h2><p>= get up</p><h2 id="turn-back">turn back<a title="#turn-back" href="#turn-back"></a></h2><blockquote><p>stop a journey and return towards the place you started from</p></blockquote><p>eg. We were turned back by heavy snow.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;参考书目：《Work on Your Phrasal Verbs》&lt;/p&gt;
    
    </summary>
    
    
      <category term="Prasal Verbs" scheme="https://venanastasia.github.io/categories/Prasal-Verbs/"/>
    
    
      <category term="Loving English" scheme="https://venanastasia.github.io/tags/Loving-English/"/>
    
  </entry>
  
  <entry>
    <title>计算机名词缩写</title>
    <link href="https://venanastasia.github.io/2020/05/10/zaliang04/"/>
    <id>https://venanastasia.github.io/2020/05/10/zaliang04/</id>
    <published>2020-05-10T14:30:06.000Z</published>
    <updated>2020-05-10T15:13:38.435Z</updated>
    
    <content type="html"><![CDATA[<p>整理自《深入理解计算机系统（3th）》。</p><a id="more"></a><h1 id="第一章-计算机系统漫游">第一章 计算机系统漫游<a title="#第一章-计算机系统漫游" href="#第一章-计算机系统漫游"></a></h1><h2 id="ansi">ANSI<a title="#ansi" href="#ansi"></a></h2><p>American National Standards Institute  美国国家标准学会<br>相关：ANSI　C</p><h2 id="iso">ISO<a title="#iso" href="#iso"></a></h2><p>International Standards Organization 国际标准化组织</p><h2 id="k&amp;r">K&amp;R<a title="#k&amp;r" href="#k&amp;r"></a></h2><p>Kernaghan和Ritchie合著的一本介绍C语言（ANSI C）的权威经典著作《C程序设计语言》。</p><h2 id="gnu">GNU<a title="#gnu" href="#gnu"></a></h2><p>GNU是GNU’s Not Unix的缩写，是1984年由Richard Stallman发起的一个免税的慈善项目。该项目已经开发出了一个包含Unix操作系统的所有主要部件的环境。</p><h2 id="gcc">GCC<a title="#gcc" href="#gcc"></a></h2><p>GCC是GNU项目开发出来的众多有用工具之一。GCC编译器可以支持多种语言，能够为许多不同的机器生成代码。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;整理自《深入理解计算机系统（3th）》。&lt;/p&gt;
    
    </summary>
    
    
      <category term="杂粮库" scheme="https://venanastasia.github.io/categories/%E6%9D%82%E7%B2%AE%E5%BA%93/"/>
    
    
      <category term="To be professional" scheme="https://venanastasia.github.io/tags/To-be-professional/"/>
    
  </entry>
  
  <entry>
    <title>Markdown语法自查手册</title>
    <link href="https://venanastasia.github.io/2020/05/09/frontend02/"/>
    <id>https://venanastasia.github.io/2020/05/09/frontend02/</id>
    <published>2020-05-09T11:05:27.000Z</published>
    <updated>2020-05-09T16:29:25.183Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1.-内容折叠">1. 内容折叠<a title="#1.-内容折叠" href="#1.-内容折叠"></a></h2><p>代码示例：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">details</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">summary</span>&gt;</span></span>展开查看<span class="xml"><span class="tag">&lt;/<span class="name">summary</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">code</span>&gt;</span></span></span><br><span class="line">System.out.println("Hello to see U!");</span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">code</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">details</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>效果展示：</p><details><summary>展开查看</summary><code>System.out.println("Hello to see U!");</code></details><h2 id="2.-列表（html实现）">2. 列表（HTML实现）<a title="#2.-列表（html实现）" href="#2.-列表（html实现）"></a></h2><p>代码示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h3</span> <span class="attr">id</span>=<span class="string">"unordered-list"</span>&gt;</span>Unordered list<span class="tag">&lt;<span class="name">a</span> <span class="attr">title</span>=<span class="string">"#unordered-list"</span> <span class="attr">href</span>=<span class="string">"#unordered-list"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>list item<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>list item</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>list item<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>list item</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>list item<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>list item<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>list item<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果展示：</p><h3 id="unordered-list">Unordered list<a title="#unordered-list" href="#unordered-list"></a></h3><ul><li>list item</li><li>list item<ul><li>list item</li><li>list item<ul><li>list item</li><li>list item</li></ul></li></ul></li><li>list item</li></ul><p>代码示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h3</span> <span class="attr">id</span>=<span class="string">"ordered-list"</span>&gt;</span>Ordered list<span class="tag">&lt;<span class="name">a</span> <span class="attr">title</span>=<span class="string">"#ordered-list"</span> <span class="attr">href</span>=<span class="string">"#ordered-list"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>list item<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>list item</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>list item<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>list item</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>list item<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>list item<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>list item<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果展示：</p><h3 id="ordered-list">Ordered list<a title="#ordered-list" href="#ordered-list"></a></h3><ol><li>list item</li><li>list item<ol><li>list item</li><li>list item<ol><li>list item</li><li>list item</li></ol></li></ol></li><li>list item</li></ol><h2 id="3.目录树">3.目录树<a title="#3.目录树" href="#3.目录树"></a></h2><p>代码示例：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[TOC]</span><br></pre></td></tr></table></figure><p>效果展示：<br>[TOC]（此页面失效）</p><h2 id="4.-页内跳转">4. 页内跳转<a title="#4.-页内跳转" href="#4.-页内跳转"></a></h2><p>代码示例：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">hhhhhh</span>](<span class="link">#哈哈哈哈哈</span>)</span><br></pre></td></tr></table></figure><h2 id="5.-本主题适用">5. 本主题适用<a title="#5.-本主题适用" href="#5.-本主题适用"></a></h2><p>参考：<a href="https://blog.oniuo.com/post/inside-theme-showcase" target="_blank">inside theme showcase</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1.-内容折叠&quot;&gt;1. 内容折叠&lt;a title=&quot;#1.-内容折叠&quot; href=&quot;#1.-内容折叠&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;代码示例：&lt;/p&gt;
&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;
      
    
    </summary>
    
    
      <category term="前端" scheme="https://venanastasia.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="To be professional" scheme="https://venanastasia.github.io/tags/To-be-professional/"/>
    
  </entry>
  
  <entry>
    <title>JAVA基础知识点自查手册</title>
    <link href="https://venanastasia.github.io/2020/05/09/java01/"/>
    <id>https://venanastasia.github.io/2020/05/09/java01/</id>
    <published>2020-05-09T10:46:57.000Z</published>
    <updated>2020-05-11T11:31:37.017Z</updated>
    
    <content type="html"><![CDATA[<p>参考书目：《Java核心技术卷一基础知识（10th）》</p><a id="more"></a><h2 id="第1章-java程序设计概述">第1章 Java程序设计概述<a title="#第1章-java程序设计概述" href="#第1章-java程序设计概述"></a></h2><h2 id="第2章-java程序设计环境">第2章 Java程序设计环境<a title="#第2章-java程序设计环境" href="#第2章-java程序设计环境"></a></h2><h2 id="第3章-java的基本程序设计结构">第3章 Java的基本程序设计结构<a title="#第3章-java的基本程序设计结构" href="#第3章-java的基本程序设计结构"></a></h2><details><summary>展开</summary><ul><li><p>注释</p></li><li><p>数据类型</p><details><summary>展开</summary>  整型；浮点类型；char类型；Unicode和char类型；boolean类型</details></li><li><p>变量</p></li><li><p>运算符</p></li><li><p>字符串</p></li><li><p>输入输出</p><details><summary>展开</summary>读取输入；格式化输入；文件输入与输出</details></li><li><p>控制流程</p></li><li><p>大数值</p></li><li><p>数组</p></li></ul></details><h2 id="第4章-对象与类">第4章 对象与类<a title="#第4章-对象与类" href="#第4章-对象与类"></a></h2><details><summary>展开</summary><ul><li>面向对象程序设计概述</li><li>使用预定义类</li><li>用户自定义类</li><li>静态域与静态方法</li><li>方法参数</li><li>对象构造</li><li>包</li><li>类路径</li><li>文档注释</li><li>类设计技巧</li></ul></details><h2 id="第5章-继承">第5章 继承<a title="#第5章-继承" href="#第5章-继承"></a></h2><details><summary>展开</summary><ul><li>类、超类和子类</li><li>Object：所有类的超类</li><li>泛型数组列表</li><li>对象包装器与自动装箱</li><li>参数数量可变的方法</li><li>枚举类</li><li>反射</li></ul></details><h2 id="第6章-接口、lambda表达式与内部类">第6章 接口、lambda表达式与内部类<a title="#第6章-接口、lambda表达式与内部类" href="#第6章-接口、lambda表达式与内部类"></a></h2><details><summary>展开</summary><ul><li>接口</li><li>接口示例</li><li>lambda表达式</li><li>内部类</li><li>代理</li></ul></details><h2 id="第7章-异常、断言和日志">第7章 异常、断言和日志<a title="#第7章-异常、断言和日志" href="#第7章-异常、断言和日志"></a></h2><details><summary>展开</summary><ul><li>处理错误</li><li>捕获异常</li><li>使用异常机制的技巧</li><li>使用断言</li><li>记录日志</li><li>调试技巧</li></ul></details>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;参考书目：《Java核心技术卷一基础知识（10th）》&lt;/p&gt;
    
    </summary>
    
    
      <category term="Java" scheme="https://venanastasia.github.io/categories/Java/"/>
    
    
      <category term="To be professional" scheme="https://venanastasia.github.io/tags/To-be-professional/"/>
    
      <category term="Java" scheme="https://venanastasia.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>那些不怎么正经的算法知识~</title>
    <link href="https://venanastasia.github.io/2020/03/27/zaliang03/"/>
    <id>https://venanastasia.github.io/2020/03/27/zaliang03/</id>
    <published>2020-03-27T13:26:50.000Z</published>
    <updated>2020-05-10T14:29:28.781Z</updated>
    
    <content type="html"><![CDATA[<h2 id="费曼算法（feynman-algorithm）">费曼算法（Feynman algorithm）<a title="#费曼算法（feynman-algorithm）" href="#费曼算法（feynman-algorithm）"></a></h2><p>这个算法是物理学家，理查德·费曼命名的，算法步骤如下：<br>（1）将问题写下来<br>（2）好好思考<br>（3）将答案写下来<br>计算机科学家真是一群不按常理出牌的人啊！</p><p>出处：《算法图解》</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;费曼算法（feynman-algorithm）&quot;&gt;费曼算法（Feynman algorithm）&lt;a title=&quot;#费曼算法（feynman-algorithm）&quot; href=&quot;#费曼算法（feynman-algorithm）&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;这个算
      
    
    </summary>
    
    
      <category term="杂粮库" scheme="https://venanastasia.github.io/categories/%E6%9D%82%E7%B2%AE%E5%BA%93/"/>
    
    
      <category term="To be professional" scheme="https://venanastasia.github.io/tags/To-be-professional/"/>
    
  </entry>
  
  <entry>
    <title>软件工程 | 知识点自查手册</title>
    <link href="https://venanastasia.github.io/2020/03/19/sekey/"/>
    <id>https://venanastasia.github.io/2020/03/19/sekey/</id>
    <published>2020-03-19T03:19:41.000Z</published>
    <updated>2020-05-11T11:33:43.905Z</updated>
    
    <content type="html"><![CDATA[<p>参考书目：《软件工程导论（第5版）》张海藩著</p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;参考书目：《软件工程导论（第5版）》张海藩著&lt;/p&gt;
    
    </summary>
    
    
      <category term="专业课" scheme="https://venanastasia.github.io/categories/%E4%B8%93%E4%B8%9A%E8%AF%BE/"/>
    
    
      <category term="To be professional" scheme="https://venanastasia.github.io/tags/To-be-professional/"/>
    
      <category term="软件工程" scheme="https://venanastasia.github.io/tags/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>操作系统 | 知识点自查手册</title>
    <link href="https://venanastasia.github.io/2020/03/19/oskey/"/>
    <id>https://venanastasia.github.io/2020/03/19/oskey/</id>
    <published>2020-03-19T03:19:18.000Z</published>
    <updated>2020-05-11T11:33:38.122Z</updated>
    
    <content type="html"><![CDATA[<p>参考书目：《操作系统教程（第5版）》费翔林 骆斌著</p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;参考书目：《操作系统教程（第5版）》费翔林 骆斌著&lt;/p&gt;
    
    </summary>
    
    
      <category term="专业课" scheme="https://venanastasia.github.io/categories/%E4%B8%93%E4%B8%9A%E8%AF%BE/"/>
    
    
      <category term="To be professional" scheme="https://venanastasia.github.io/tags/To-be-professional/"/>
    
      <category term="操作系统" scheme="https://venanastasia.github.io/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>数据库 | 知识点自查手册</title>
    <link href="https://venanastasia.github.io/2020/03/19/dbkey/"/>
    <id>https://venanastasia.github.io/2020/03/19/dbkey/</id>
    <published>2020-03-19T03:19:03.000Z</published>
    <updated>2020-05-11T11:32:55.150Z</updated>
    
    <content type="html"><![CDATA[<p>参考书目：《数据库系统概论（第5版）》王珊 萨师煊著</p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;参考书目：《数据库系统概论（第5版）》王珊 萨师煊著&lt;/p&gt;
    
    </summary>
    
    
      <category term="专业课" scheme="https://venanastasia.github.io/categories/%E4%B8%93%E4%B8%9A%E8%AF%BE/"/>
    
    
      <category term="To be professional" scheme="https://venanastasia.github.io/tags/To-be-professional/"/>
    
      <category term="数据库" scheme="https://venanastasia.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>计算机网络 | 知识点自查手册</title>
    <link href="https://venanastasia.github.io/2020/03/19/netkey/"/>
    <id>https://venanastasia.github.io/2020/03/19/netkey/</id>
    <published>2020-03-19T03:18:41.000Z</published>
    <updated>2020-05-11T11:33:32.565Z</updated>
    
    <content type="html"><![CDATA[<p>参考书目：《计算机网络（第7版）》谢希仁著</p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;参考书目：《计算机网络（第7版）》谢希仁著&lt;/p&gt;
    
    </summary>
    
    
      <category term="专业课" scheme="https://venanastasia.github.io/categories/%E4%B8%93%E4%B8%9A%E8%AF%BE/"/>
    
    
      <category term="To be professional" scheme="https://venanastasia.github.io/tags/To-be-professional/"/>
    
      <category term="计算机网络" scheme="https://venanastasia.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>属性attribute和property的区别</title>
    <link href="https://venanastasia.github.io/2020/03/17/frontend01/"/>
    <id>https://venanastasia.github.io/2020/03/17/frontend01/</id>
    <published>2020-03-17T09:06:56.000Z</published>
    <updated>2020-04-10T13:01:45.467Z</updated>
    
    <content type="html"><![CDATA[<h2 id="本质区别">本质区别<a title="#本质区别" href="#本质区别"></a></h2><p>atrribute: a quality or feature of sb/sth   泛称<br>property: a quality or characteristic that sth has   特指某个特征</p><h2 id="程序上的区别">程序上的区别<a title="#程序上的区别" href="#程序上的区别"></a></h2><p>Attribute是标记语言的概念，标记语言本身是一种文本，所以Attribute这种文本方式描述的性质在标记语言中很容易使用。<br>而Property则是保存在内存（memory）中，而内存会随着程序运行结束被释放，因此变得无法长期储存。</p><p>在JavaScript中，DOM对象通常都是多重继承的。同时继承了HTML和JavaScript的Object。Object是完完全全的内存对象，所以使用的是Property，而HTML本身是标记语言所以使用的是Attribute。当这两个东西被继承到同一个对象上的时候经常会让人混淆起来。由于一些Attribute是很常用的，比如id、class等，所以DOM把它们映射到了Property上以方便使用。这样我们就会遇到一个对象同时具有id这个Attribute和Property（由于class是保留字，所以它被映射到Property上时变成了className）。</p><h2 id="代码上的表现">代码上的表现<a title="#代码上的表现" href="#代码上的表现"></a></h2><p>property属性:<br>一般指的对象中的属性，也就是使用点号<code>.</code>访问的属性，它明确的指向内存中的一个内存地址中存放的内容。<br>它是真正编程中所说的属性。property属性值可以是各种类型的。</p><p>attribute属性:<br>此属性在web编程中，一般是标签中的属性，例如&lt;input id=“thetext”&gt;的id属性，它仅仅是一个描述，就好比说张三长的很帅，具有两只眼睛一个鼻子一样。attribute属性值只能够是字符串。</p><h2 id="参考资料">参考资料<a title="#参考资料" href="#参考资料"></a></h2><p>百度回答：<a href="https://zhidao.baidu.com/question/1835981812972411540.html" target="_blank" rel="noopener">https://zhidao.baidu.com/question/1835981812972411540.html</a><br>博文：<a href="https://www.softwhy.com/article-1108-1.html" target="_blank" rel="noopener">https://www.softwhy.com/article-1108-1.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;本质区别&quot;&gt;本质区别&lt;a title=&quot;#本质区别&quot; href=&quot;#本质区别&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;atrribute: a quality or feature of sb/sth   泛称&lt;br&gt;
property: a quality or chara
      
    
    </summary>
    
    
      <category term="前端" scheme="https://venanastasia.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="To be professional" scheme="https://venanastasia.github.io/tags/To-be-professional/"/>
    
      <category term="HTML" scheme="https://venanastasia.github.io/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>“Error:(1, 1) java:非法字符‘\ufeff’”错误解决办法</title>
    <link href="https://venanastasia.github.io/2020/03/06/java03/"/>
    <id>https://venanastasia.github.io/2020/03/06/java03/</id>
    <published>2020-03-06T15:13:18.000Z</published>
    <updated>2020-05-10T14:29:21.282Z</updated>
    
    <content type="html"><![CDATA[<h2 id="出现原因">出现原因<a title="#出现原因" href="#出现原因"></a></h2><p>用Windows记事本打开并修改.java文件保存后重新编译运行项目出现“Error:(1, 1) java: 非法字符: ‘\ufeff’”错误。<br>这是因为Windows记事本在修改UTF-8文件时会在文件开头添加BOM，导致IDEA不能正确读取.java文件从而报错。</p><h2 id="解决方法">解决方法<a title="#解决方法" href="#解决方法"></a></h2><p>在编辑器IDEA中将文件编码更改为UTF-16，再改回UTF-8即可，其实就相当于刷新了一下文件编码。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;出现原因&quot;&gt;出现原因&lt;a title=&quot;#出现原因&quot; href=&quot;#出现原因&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;用Windows记事本打开并修改.java文件保存后重新编译运行项目出现“Error:(1, 1) java: 非法字符: ‘\ufeff’”错误。&lt;br&gt;

      
    
    </summary>
    
    
      <category term="Java" scheme="https://venanastasia.github.io/categories/Java/"/>
    
    
      <category term="To be professional" scheme="https://venanastasia.github.io/tags/To-be-professional/"/>
    
      <category term="Java" scheme="https://venanastasia.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Java中floorMod方法的理解</title>
    <link href="https://venanastasia.github.io/2020/02/28/java02/"/>
    <id>https://venanastasia.github.io/2020/02/28/java02/</id>
    <published>2020-02-28T06:11:01.000Z</published>
    <updated>2020-05-10T14:29:12.380Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概念对比">概念对比<a title="#概念对比" href="#概念对比"></a></h2><div class="φcy"><div class="φda"><table><thead><tr><th>名称</th><th>含义</th><th>示例</th></tr></thead><tbody><tr><td>%</td><td>求余(rem)</td><td>(+4 % -3)== +1</td></tr><tr><td>floorMod()</td><td>取模(mod)</td><td>floorMod(+4,-3)== -2</td></tr></tbody></table></div></div><h2 id="本质区别">本质区别<a title="#本质区别" href="#本质区别"></a></h2><p>对于整型数a，b来说，取模运算或者求余运算的方法都是：<br>1.求 整数商： c = a/b;<br>2.计算模或者余数： r = a - c*b.</p><p>求模运算和求余运算在第一步不同: <strong>取余运算在取c的值时，向0方向舍入；而取模运算在计算c的值时，向负无穷方向舍入</strong>。</p><p>例：</p><div class="φcy"><div class="φda"><table><thead><tr><th style="padding:0"></th><th>+4 % -3</th><th>floorMod(+4,-3)</th></tr></thead><tbody><tr><td>a=</td><td>+4</td><td>+4</td></tr><tr><td>b=</td><td>-3</td><td>-3</td></tr><tr><td>c=</td><td><strong>-1</strong></td><td><strong>-2</strong></td></tr><tr><td>r=</td><td>+1</td><td>-2</td></tr></tbody></table></div></div><h2 id="巧记">巧记<a title="#巧记" href="#巧记"></a></h2><p>当a,b同号时，求余运算与取模运算结果相同，符号与a（被除数）相同；否则，取模运算的符号与b（除数）相同。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;概念对比&quot;&gt;概念对比&lt;a title=&quot;#概念对比&quot; href=&quot;#概念对比&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class=&quot;φcy&quot;&gt;&lt;div class=&quot;φda&quot;&gt;&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名称&lt;/th&gt;
&lt;th&gt;含义&lt;/th&gt;
&lt;th&gt;
      
    
    </summary>
    
    
      <category term="Java" scheme="https://venanastasia.github.io/categories/Java/"/>
    
    
      <category term="To be professional" scheme="https://venanastasia.github.io/tags/To-be-professional/"/>
    
      <category term="Java" scheme="https://venanastasia.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>换行与回车的区别</title>
    <link href="https://venanastasia.github.io/2020/02/27/zaliang02/"/>
    <id>https://venanastasia.github.io/2020/02/27/zaliang02/</id>
    <published>2020-02-27T13:17:14.000Z</published>
    <updated>2020-04-10T12:57:51.024Z</updated>
    
    <content type="html"><![CDATA[<h2 id="名词解释">名词解释<a title="#名词解释" href="#名词解释"></a></h2><div class="φcy"><div class="φda"><table><thead><tr><th>名词</th><th>转义字符</th><th>对应的英文</th><th>本义</th><th>控制字符</th></tr></thead><tbody><tr><td>回车</td><td>\r</td><td>return</td><td>光标重新回到本行的开头</td><td>CR(Carriage Return)</td></tr><tr><td>换行</td><td>\n</td><td>newline</td><td>光标往下一行（<strong>不一定到行首</strong>）</td><td>LF(Line Feed)</td></tr></tbody></table></div></div><h2 id="使用情况">使用情况<a title="#使用情况" href="#使用情况"></a></h2><ul><li>CR：Maclntosh</li><li>LF：Unix/Linux/MacOS</li><li>CRLF：Windows</li></ul><h2 id="背景（野史）">背景（野史）<a title="#背景（野史）" href="#背景（野史）"></a></h2><p>在计算机出现之前，人们使用打字机时，打字机每秒可以打10个字符，而换行需要0.2秒，此段时间会出现字符丢失。研制人员为了解决这个问题，就在每行后面加上两个表示结束的字符。LF会将打印纸张上移一行位置（feed有“进料”的含义），但是保持当前打字的水平位置不变；CR则会将“Carriage”（打字机上的滚动托架）滚回到打印纸张的最左侧，但是保持当前打字的垂直位置不变，即还是在同一行。<br>当CR和LF组合使用时，则会将打印纸张上移一行，且下一个打字位置将回到该行的最左侧，也就是我们今天所理解的换行操作。</p><p>当计算机出现之后，受限于当时内存和软盘空间的不足，一些操作系统的设计者决定采用单个字符来表示换行符，如Unix的LF、MacIntosh（Mac早期的操作系统）的CR。</p><h2 id="踩过的坑">踩过的坑<a title="#踩过的坑" href="#踩过的坑"></a></h2><h3 id="hexo警告：lf-will-be-replaced-by-crlf">hexo警告：LF will be replaced by CRLF<a title="#hexo警告：lf-will-be-replaced-by-crlf" href="#hexo警告：lf-will-be-replaced-by-crlf"></a></h3><ul><li>git工作区默认为CRLF来作为换行符</li><li>解决方式：<br>1. 这个只是一个警告，我们直接忽略就好。<br>2. git config –global core.autocrlf false  //禁用自动转换</li></ul><h2 id="扩展：硬回车和软回车">扩展：硬回车和软回车<a title="#扩展：硬回车和软回车" href="#扩展：硬回车和软回车"></a></h2><ul><li>硬回车就是普通我们按回车产生的，它在换行的同时也起着段落分隔的作用。</li><li>软回车是用 Shift + Enter 产生的，它换行，但是并不换段，即前后两段文字在 Word 中属于同一“段”。在应用格式时你会体会到这一点。软回车能使前后两行的行间距大幅度缩小，因为它不是段落标记，要和法定的段落标记——硬回车区别出来。硬回车的html代码是<code>&lt;p&gt;..&lt;/p&gt;</code>，段落的内容就夹在里面，而软回车的代码很精悍：<code>&lt;br&gt;</code>。网页的文字如果复制到word中，则硬回车变为弯曲的箭头，软回车变为向下的箭头。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;名词解释&quot;&gt;名词解释&lt;a title=&quot;#名词解释&quot; href=&quot;#名词解释&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class=&quot;φcy&quot;&gt;&lt;div class=&quot;φda&quot;&gt;&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名词&lt;/th&gt;
&lt;th&gt;转义字符&lt;/th&gt;
&lt;t
      
    
    </summary>
    
    
      <category term="杂粮库" scheme="https://venanastasia.github.io/categories/%E6%9D%82%E7%B2%AE%E5%BA%93/"/>
    
    
      <category term="To be professional" scheme="https://venanastasia.github.io/tags/To-be-professional/"/>
    
  </entry>
  
  <entry>
    <title>为什么是String[] args而非String args[]？</title>
    <link href="https://venanastasia.github.io/2020/02/01/zaliang01/"/>
    <id>https://venanastasia.github.io/2020/02/01/zaliang01/</id>
    <published>2020-02-01T14:40:57.000Z</published>
    <updated>2020-04-10T12:56:51.835Z</updated>
    
    <content type="html"><![CDATA[<p>public void main(String[] args) 和 public void main(String args[])编译出来并无区别，都表示声明了一个字符串类型的数组args。<br><br>但推荐使用前者，因为它把元素类型和变量名更清楚地分开了，这种方式可以更明显地体现出是否是数组这一特点。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;public void main(String[] args) 和 public void main(String args[])编译出来并无区别，都表示声明了一个字符串类型的数组args。&lt;br&gt;&lt;br&gt;
但推荐使用前者，因为它把元素类型和变量名更清楚地分开了，这种方式可
      
    
    </summary>
    
    
      <category term="Java" scheme="https://venanastasia.github.io/categories/Java/"/>
    
    
      <category term="To be professional" scheme="https://venanastasia.github.io/tags/To-be-professional/"/>
    
      <category term="Java" scheme="https://venanastasia.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>蓝桥杯刷题（BASIC）</title>
    <link href="https://venanastasia.github.io/2020/01/22/lanqiao03/"/>
    <id>https://venanastasia.github.io/2020/01/22/lanqiao03/</id>
    <published>2020-01-22T10:03:15.000Z</published>
    <updated>2020-05-09T15:50:05.977Z</updated>
    
    <content type="html"><![CDATA[<p>普通题 16-30</p><a id="more"></a><p>[TOC]</p><h2 id="basic-16.-分解质因数">BASIC-16. 分解质因数<a title="#basic-16.-分解质因数" href="#basic-16.-分解质因数"></a></h2><p>🔔题目描述<br>求出区间[a,b]中所有整数的质因数分解。<br>📙输入格式<br>输入两个整数a，b。<br>📙输出格式<br>每行输出一个数的分解，形如k=a1*a2*a3…(a1&lt;=a2&lt; =a3…，k也是从小到大的)(具体可看样例)<br>📙样例输入<br>3  10<br>📙样例输出<br>3=3<br>4=2*2<br>5=5<br>6=2*3<br>7=7<br>8=2*2*2<br>9=3*3<br>10=2*5<br>📙数据规模和约定<br>2&lt;=a&lt;=b&lt;=10000</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>; </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a,b;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=a;i&lt;=b;i++)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="string">"="</span>;</span><br><span class="line">        <span class="keyword">int</span> n2=i;</span><br><span class="line">        <span class="keyword">if</span>(i &lt; <span class="number">2</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;                <span class="comment">//小于2的数不合法</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">2</span>; j*j &lt;= n2; j++)&#123;        </span><br><span class="line">            <span class="keyword">while</span> (n2%j == <span class="number">0</span>)&#123;</span><br><span class="line">                n2 = n2 / j;</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; j;</span><br><span class="line">                <span class="keyword">if</span> (n2 != <span class="number">1</span>)</span><br><span class="line">                    <span class="built_in">cout</span> &lt;&lt; <span class="string">"*"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(n2!= <span class="number">1</span>)    </span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; n2;        <span class="comment">//当n为质数，直接输出本身</span></span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="basic-17.-矩阵乘法">BASIC-17. 矩阵乘法<a title="#basic-17.-矩阵乘法" href="#basic-17.-矩阵乘法"></a></h2><p>🔔题目描述<br>给定一个N阶矩阵A，输出A的M次幂（M是非负整数）<br>例如：<br>A  =<br>1  2<br>3  4<br>A的2次幂<br>7  10<br>15  22<br>📙输入格式<br>第一行是一个正整数N、M（<strong>1&lt; =N&lt; =30,  0&lt; =M&lt; =5</strong>），表示矩阵A的阶数和要求的幂数<br>接下来N行，每行N个绝对值不超过10的非负整数，描述矩阵A的值<br>📙输出格式<br>输出共N行，每行N个整数，表示A的M次幂所对应的矩阵。相邻的数之间用一个空格隔开<br>📙样例输入<br>2  2<br>1  2<br>3  4<br>📙样例输出<br>7 10<br>15 22</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> b[<span class="number">40</span>][<span class="number">40</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> a[<span class="number">40</span>][<span class="number">40</span>];</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> t[<span class="number">40</span>][<span class="number">40</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;a[i][j];</span><br><span class="line">            t[i][j]=a[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//0阶幂</span></span><br><span class="line">    <span class="keyword">if</span>(m==<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(i!=j)&#123;</span><br><span class="line">                    <span class="built_in">cout</span>&lt;&lt;<span class="number">0</span>&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="built_in">cout</span>&lt;&lt;<span class="number">1</span>&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//一般情况</span></span><br><span class="line">    <span class="keyword">while</span>(--m)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line">                <span class="keyword">int</span> k=n;</span><br><span class="line">                <span class="keyword">while</span>(k)&#123;</span><br><span class="line">                    b[i][j]+=t[i][k<span class="number">-1</span>]*a[k<span class="number">-1</span>][j];</span><br><span class="line">                    k--;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line">                t[i][j]=b[i][j];</span><br><span class="line">                b[i][j]=<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//输出结果</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;     </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;t[i][j]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="basic-18.-矩形面积交">BASIC-18. 矩形面积交<a title="#basic-18.-矩形面积交" href="#basic-18.-矩形面积交"></a></h2><p>🔔题目描述<br>平面上有两个矩形，它们的边平行于直角坐标系的X轴或Y轴。对于每个矩形，我们给出它的一对相对顶点的坐标，请你编程算出两个矩形的交的面积。<br>📙输入格式<br>输入仅包含两行，每行描述一个矩形。<br>在每行中，给出矩形的一对相对顶点的坐标，每个点的坐标都用两个绝对值不超过10^7的实数表示。<br>📙输出格式<br>输出仅包含一个实数，为交的面积，保留到小数后两位。<br>📙样例输入<br>1  1  3  3<br>2  2  4  4<br>📙样例输出<br>1.00</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> x1,y1,x2,y2,x3,y3,x4,y4;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;x1&gt;&gt;y1&gt;&gt;x2&gt;&gt;y2&gt;&gt;x3&gt;&gt;y3&gt;&gt;x4&gt;&gt;y4;</span><br><span class="line">    <span class="keyword">if</span>(x1&gt;x2)</span><br><span class="line">        swap(x1,x2);</span><br><span class="line">    <span class="keyword">if</span>(y1&gt;y2)</span><br><span class="line">        swap(y1,y2);</span><br><span class="line">    <span class="keyword">if</span>(x3&gt;x4)</span><br><span class="line">        swap(x3,x4);</span><br><span class="line">    <span class="keyword">if</span>(y3&gt;y4)</span><br><span class="line">        swap(y3,y4);</span><br><span class="line">    <span class="keyword">if</span>((x2&lt;x3&amp;&amp;x1&lt;x3)||(y2&lt;y3&amp;&amp;y1&lt;y3)||(x4&lt;x1&amp;&amp;x3&gt;x1)||(y4&lt;y1&amp;&amp;y3&lt;y1))&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"0.00"</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">double</span> a[<span class="number">4</span>]=&#123;x1,x2,x3,x4&#125;;</span><br><span class="line">    <span class="keyword">double</span> b[<span class="number">4</span>]=&#123;y1,y2,y3,y4&#125;;</span><br><span class="line">    sort(a,a+<span class="number">4</span>);</span><br><span class="line">    sort(b,b+<span class="number">4</span>);</span><br><span class="line">    <span class="keyword">double</span> area=(a[<span class="number">2</span>]-a[<span class="number">1</span>])*(b[<span class="number">2</span>]-b[<span class="number">1</span>]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%0.2f"</span>,area);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="basic-22.-fj的字符串">BASIC-22. FJ的字符串<a title="#basic-22.-fj的字符串" href="#basic-22.-fj的字符串"></a></h2><p>🔔题目描述<br>FJ在沙盘上写了这样一些字符串：<br>A1  =  “A”<br>A2  =  “ABA”<br>A3  =  “ABACABA”<br>A4  =  “ABACABADABACABA”<br>…  …<br>你能找出其中的规律并写所有的数列AN吗？<br>📙输入格式<br>仅有一个数：N  ≤  26。<br>📙输出格式<br>请输出相应的字符串AN，以一个换行符结束。输出中不得含有多余的空格或换行、回车符。<br>📙样例输入<br>3<br>📙样例输出<br>ABACABA</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"A"</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dfs(n<span class="number">-1</span>)+(<span class="keyword">char</span>)(n+<span class="string">'A'</span><span class="number">-1</span>)+dfs(n<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;dfs(n);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="basic-23.-芯片测试">BASIC-23. 芯片测试<a title="#basic-23.-芯片测试" href="#basic-23.-芯片测试"></a></h2><p>🔔题目描述<br>有n（2≤n≤20）块芯片，有好有坏，已知<strong>好芯片比坏芯片多</strong>。<br>每个芯片都能用来测试其他芯片。用好芯片测试其他芯片时，能正确给出被测试芯片是好还是坏。而用坏芯片测试其他芯片时，会随机给出好或是坏的测试结果（即此结果与被测试芯片实际的好坏无关）。<br>给出所有芯片的测试结果，问哪些芯片是好芯片。<br>📙输入格式<br>输入数据第一行为一个整数n，表示芯片个数。<br>第二行到第n+1行为n*n的一张表，每行n个数据。表中的每个数据为0或1，在这n行中的第i行第j列（1≤i,  j≤n）的数据表示用第i块芯片测试第j块芯片时得到的测试结果，1表示好，0表示坏，i=j时一律为1（并不表示该芯片对本身的测试结果。芯片不能对本  身进行测试）。<br>📙输出格式<br>按从小到大的顺序输出所有好芯片的编号<br>📙样例输入<br>3<br>1  0  1<br>0  1  0<br>1  0  1<br>📙样例输出<br>1 3<br>🌈算法描述<br>因为超过半数的芯片是好的，所以这些芯片对于其他芯片的测试结果是正确的。<br>所以假设该芯片是好芯片，它除了它自身测试自身之外的其他测试结果为好的个数将超过一半。<br>同理，假设该芯片是坏芯片，他将有超过半数的测试结果是坏芯片。<br>所以只要根据每一列的所有测试结果，判断其为好芯片的总数&gt;=n/2的时候，这个芯片就是好芯片。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">20</span>][<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;a[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(j!=i)</span><br><span class="line">            cnt+=a[j][i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(cnt&gt;=n/<span class="number">2</span>)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;i+<span class="number">1</span>&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="basic-26.-报时助手">BASIC-26. 报时助手<a title="#basic-26.-报时助手" href="#basic-26.-报时助手"></a></h2><p>🔔题目描述<br>给定当前的时间，请用英文的读法将它读出来。<br>时间用时h和分m表示，在英文的读法中，读一个时间的方法是：<br>如果m为0，则将时读出来，然后加上“o’clock”，如3:00读作“three  o’clock”。<br>如果m不为0，则将时读出来，然后将分读出来，如5:30读作“five  thirty”。<br>时和分的读法使用的是英文数字的读法，其中0~20读作：<br>0:zero,  1:  one,  2:two,  3:three,  4:four,  5:five,  6:six,  7:seven,  8:eight,  9:nine,  10:ten,  11:eleven,  12:twelve,  13:thirteen,  14:fourteen,  15:fifteen,  16:sixteen,  17:seventeen,  18:eighteen,  19:nineteen,  20:twenty。<br>30读作thirty，40读作forty，50读作fifty。<br>对于大于20小于60的数字，首先读整十的数，然后再加上个位数。如31首先读30再加1的读法，读作“thirty  one”。<br>按上面的规则21:54读作“twenty  one  fifty  four”，9:07读作“nine  seven”，0:15读作“zero  fifteen”。<br>📙输入格式<br>输入包含两个非负整数h和m，表示时间的时和分。非零的数字前没有前导0。h小于24，m小于60。<br>📙输出格式<br>输出时间时刻的英文。<br>📙样例输入<br>0 15<br>📙样例输出<br>zero fifteen</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> h,m;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;h&gt;&gt;m;</span><br><span class="line">    <span class="built_in">string</span> arr[<span class="number">24</span>]=&#123;<span class="string">"zero"</span>,<span class="string">"one"</span>,<span class="string">"two"</span>,<span class="string">"three"</span>,<span class="string">"four"</span>,<span class="string">"five"</span>,<span class="string">"six"</span>,<span class="string">"seven"</span>,<span class="string">"eight"</span>,<span class="string">"nine"</span>,<span class="string">"ten"</span>,<span class="string">"eleven"</span>,<span class="string">"twelve"</span>,<span class="string">"thirteen"</span>,<span class="string">"fourteen"</span>,<span class="string">"fifteen"</span>,<span class="string">"sixteen"</span>,<span class="string">"seventeen"</span>,<span class="string">"eighteen"</span>,<span class="string">"nineteen"</span>,<span class="string">"twenty"</span>,<span class="string">"twenty one"</span>,<span class="string">"twenty two"</span>,<span class="string">"twenty three"</span>&#125;;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;arr[h]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">    <span class="keyword">if</span>(m==<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"o'clock"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> t=m%<span class="number">10</span>; <span class="comment">//分钟个位</span></span><br><span class="line">    m=m/<span class="number">10</span>;     <span class="comment">//分钟十位</span></span><br><span class="line">    <span class="keyword">switch</span>(m)&#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>: <span class="built_in">cout</span>&lt;&lt;<span class="string">"twenty "</span>; <span class="keyword">break</span>;  <span class="comment">//twenty后有空格</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>: <span class="built_in">cout</span>&lt;&lt;<span class="string">"thirty "</span>; <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>: <span class="built_in">cout</span>&lt;&lt;<span class="string">"forty "</span>; <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>: <span class="built_in">cout</span>&lt;&lt;<span class="string">"fifty "</span>; <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>: <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(m==<span class="number">0</span>&amp;&amp;t!=<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;arr[t];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(m==<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;arr[t+<span class="number">10</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(m!=<span class="number">0</span>&amp;&amp;m!=<span class="number">1</span>&amp;&amp;t!=<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;arr[t];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="basic-29.-高精度加法">BASIC-29. 高精度加法<a title="#basic-29.-高精度加法" href="#basic-29.-高精度加法"></a></h2><p>🔔题目描述<br>输入两个整数a和b，输出这两个整数的和。a和b都不超过100位。<br>📙输入格式<br>输入包括两行，第一行为一个非负整数a，第二行为一个非负整数b。两个整数都不超过100位，两数的最高位都不是0。<br>📙输出格式<br>输出一行，表示a  +  b的值。<br>📙样例输入<br>20100122201001221234567890<br>2010012220100122<br>📙样例输出<br>20100122203011233454668012<br>🌈算法描述<br>由于a和b都比较大，所以不能直接使用语言中的标准数据类型来存储。对于这种问题，一般使用数组来处理。<br>定义一个数组A，A[0]用于存储a的个位，A[1]用于存储a的十位，依此类推。同样可以用一个数组B来存储b。<br>计算c  =  a  +  b的时候，首先将A[0]与B[0]相加，如果有进位产生，则把进位（即和的十位数）存入r，把和的个位数存入C[0]，即C[0]等于(A[0]+B[0])%10。然后计算A[1]与B[1]相加，这时还应将低位进上来的值r也加起来，即C[1]应该是A[1]、B[1]和r三个数的和．如果又有进位产生，则仍可将新的进位存入到r中，和的个位存到C[1]中。依此类推，即可求出C的所有位。<br>最后将C输出即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> a;</span><br><span class="line">    <span class="built_in">string</span> b;</span><br><span class="line">    <span class="keyword">int</span> A[<span class="number">100</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> B[<span class="number">100</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b;</span><br><span class="line">    <span class="keyword">int</span> lena=a.length();</span><br><span class="line">    <span class="keyword">int</span> lenb=b.length();</span><br><span class="line">    <span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=lena<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">        A[j++]=a[i]-<span class="string">'0'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    j=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=lenb<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">        B[j++]=b[i]-<span class="string">'0'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> C[<span class="number">101</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> temp=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">100</span>;i++)&#123;</span><br><span class="line">        C[i]=A[i]+B[i]+temp;</span><br><span class="line">        temp=C[i]/<span class="number">10</span>;  <span class="comment">//处理进位</span></span><br><span class="line">        C[i]=C[i]%<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> max=lena;</span><br><span class="line">    <span class="keyword">if</span>(max&lt;lenb)&#123;</span><br><span class="line">        max=lenb;</span><br><span class="line">    &#125;</span><br><span class="line">    max=max<span class="number">-1</span>;  <span class="comment">//C数组编号</span></span><br><span class="line">    <span class="keyword">if</span>(C[max+<span class="number">1</span>]!=<span class="number">0</span>)&#123;  <span class="comment">//确定数组实际编号长度</span></span><br><span class="line">        max=max+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=max;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;C[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="basic-30.-阶乘计算">BASIC-30. 阶乘计算<a title="#basic-30.-阶乘计算" href="#basic-30.-阶乘计算"></a></h2><p>🔔题目描述<br>输入一个正整数n，输出n!的值。<br>其中n!=1*/2*/3*…*n。<br>📙输入格式<br>输入包含一个正整数n，n&lt; =1000。<br>📙输出格式<br>输出n!的准确值。<br>📙样例输入<br>10<br>📙样例输出<br>3628800<br>🌈算法描述<br>n!可能很大，而计算机能表示的整数范围有限，需要使用高精度计算的方法。使用一个数组A来表示一个大整数a，A[0]表示a的个位，A[1]表示a的十位，依次类推。<br>将a乘以一个整数k变为将数组A的每一个元素都乘以k，请注意处理相应的进位。<br>首先将a设为1，然后乘2，乘3，当乘到n时，即得到了n!的值。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10005</span>];   </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> n;</span><br><span class="line">    <span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span>(a));</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    a[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> s,c=<span class="number">0</span>;  <span class="comment">//c 进位 </span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">10000</span>;j++)&#123;</span><br><span class="line">            s=a[j]*i+c;</span><br><span class="line">            a[j]=s%<span class="number">10</span>;</span><br><span class="line">            c=s/<span class="number">10</span>;</span><br><span class="line">        &#125;   </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">10000</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]!=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i;j&gt;=<span class="number">0</span>;j--)&#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;a[j];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;普通题 16-30&lt;/p&gt;
    
    </summary>
    
    
      <category term="Lan Qiao" scheme="https://venanastasia.github.io/categories/Lan-Qiao/"/>
    
    
      <category term="刷题" scheme="https://venanastasia.github.io/tags/%E5%88%B7%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>蓝桥杯刷题（BASIC）</title>
    <link href="https://venanastasia.github.io/2020/01/20/lanqiao02/"/>
    <id>https://venanastasia.github.io/2020/01/20/lanqiao02/</id>
    <published>2020-01-20T14:19:34.000Z</published>
    <updated>2020-05-09T15:49:46.783Z</updated>
    
    <content type="html"><![CDATA[<p>普通题 1-15</p><a id="more"></a><p>[TOC]</p><h2 id="basic-1.-闰年判断">BASIC-1. 闰年判断<a title="#basic-1.-闰年判断" href="#basic-1.-闰年判断"></a></h2><h2 id="basic-2.-01字串">BASIC-2. 01字串<a title="#basic-2.-01字串" href="#basic-2.-01字串"></a></h2><p>🔔问题描述<br>对于长度为5位的⼀个01串，每⼀位都可能是0或1，⼀共有32种可能。它们的前几个是：<br>00000<br>00001<br>00010<br>00011<br>00100<br>请按从小到大的顺序输出这32种01串。<br>📙输⼊格式<br>本试题没有输⼊。<br>📙输出格式<br>输出32行，按从小到大的顺序每⾏一个长度为5的01串。<br>📙样例输出<br>00000<br>00001<br>00010<br>00011</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">1</span>;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=<span class="number">1</span>;j++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;=<span class="number">1</span>;k++)</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> l=<span class="number">0</span>;l&lt;=<span class="number">1</span>;l++)</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> m=<span class="number">0</span>;m&lt;=<span class="number">1</span>;m++)&#123;</span><br><span class="line">                        <span class="built_in">cout</span>&lt;&lt;i&lt;&lt;j&lt;&lt;k&lt;&lt;l&lt;&lt;m&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="basic-3.-字母图形">BASIC-3. 字母图形<a title="#basic-3.-字母图形" href="#basic-3.-字母图形"></a></h2><p>🔔问题描述<br>利用字母可以组成⼀些美丽的图形，下⾯给出了一个例子：<br>ABCDEFG<br>BABCDEF<br>CBABCDE<br>DCBABCD<br>EDCBABC<br>这是⼀个5行7列的图形，请找出这个图形的规律，并输出⼀个n行m列的图形。<br>📙输⼊格式<br>输⼊一行，包含两个整数n和m，分别表示你要输出的图形的行数和列数。<br>📙输出格式<br>输出n行，每行m个字符，为你的图形。<br>📙样例输⼊<br>5 7<br>📙样例输出<br>ABCDEFG<br>BABCDEF<br>CBABCDE<br>DCBABCD<br>EDCBABC<br>📙数据规模与约定<br>1 &lt;= n, m &lt;= 26。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;m;j++)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="keyword">char</span>(<span class="string">'A'</span>+<span class="built_in">abs</span>(i-j));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="basic-4.-数列特征">BASIC-4. 数列特征<a title="#basic-4.-数列特征" href="#basic-4.-数列特征"></a></h2><p>🔔问题描述<br>给出n个数，找出这n个数的最大值，最小值，和。<br>📙输入格式<br>第一行为整数n，表示数的个数。<br>第二行有n个数，为给定的n个数，每个数的绝对值都小于10000。<br>📙输出格式<br>输出三行，每行一个整数。<strong>第一行表示这些数中的最大值</strong>，第二行表示这些数中的最小值，第三行表示这些数的和。<br>📙样例输入<br>5<br>1 3 -2 4 5<br>📙样例输出<br>5<br>-2<br>11<br>📙数据规模与约定<br>1 &lt;= n &lt;= 10000。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> a&lt;b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"><span class="keyword">int</span> a[n];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">sort(a,a+n,cmp);</span><br><span class="line"><span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">sum=sum+a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;a[n<span class="number">-1</span>]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;a[<span class="number">0</span>]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;sum&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="basic-5-查找整数">BASIC-5 查找整数<a title="#basic-5-查找整数" href="#basic-5-查找整数"></a></h2><p>🔔问题描述<br>给出一个包含n个整数的数列，问整数a在数列中的第一次出现是第几个。<br>📙输入格式<br>第一行包含一个整数n。<br>第二行包含n个非负整数，为给定的数列，数列中的每个数都不大于10000。<br>第三行包含一个整数a，为待查找的数。<br>📙输出格式<br>如果a在数列中出现了，输出它第一次出现的位置(<strong>位置从1开始编号</strong>)，<strong>否则输出-1</strong>。 <br/><br>📙样例输入<br>6<br>1 9 4 8 3 9<br>9  <br/><br>📙样例输出<br>2  <br/><br>📙数据规模与约定<br>1 &lt;= n &lt;= 1000。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">int</span> a[n];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(t==a[i]) <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(i==n)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"-1"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;i+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="basic-6-杨辉三角形">BASIC-6 杨辉三角形<a title="#basic-6-杨辉三角形" href="#basic-6-杨辉三角形"></a></h2><p>🔔问题描述<br>杨辉三角形又称Pascal三角形，它的第i+1行是(a+b)i的展开式的系数。　它的一个重要性质是：<strong>三角形中的每个数字等于它两肩上的数字相加</strong>。<br>下面给出了杨辉三角形的前4行：<br>1<br>1 1<br>1 2 1<br>1 3 3 1  　<br>给出n，输出它的前n行。 <br/><br>📙输入格式<br>输入包含一个数n。<br>📙输出格式<br>输出杨辉三角形的前n行。每一行从这一行的第一个数开始依次输出，中间使用一个空格分隔。请不要在前面输出多余的空格。<br>📙样例输入<br>4  <br/><br>📙样例输出<br>1<br>1 1<br>1 2 1<br>1 3 3 1<br>📙数据规模与约定<br>1 &lt;= n &lt;= 34。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">34</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> a[N][N];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">a[i][<span class="number">0</span>] = a[i][i] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; i; j++) &#123;</span><br><span class="line">a[i][j] = a[i - <span class="number">1</span>][j - <span class="number">1</span>] + a[i - <span class="number">1</span>][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= i; j++) &#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; a[i][j] &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="basic-7.-特殊的数字">BASIC-7. 特殊的数字<a title="#basic-7.-特殊的数字" href="#basic-7.-特殊的数字"></a></h2><p>🔔问题描述<br>153是一个非常特殊的数，它等于它的每位数字的立方和，即153=1* 1* 1+5* 5* 5+3* 3* 3。编程求所有满足这种条件的三位十进制数。<br>📙输出格式  <br/><br>按从小到大的顺序输出满足条件的三位十进制数，每个数占一行。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">9</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=<span class="number">9</span>;j++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;=<span class="number">9</span>;k++)&#123;</span><br><span class="line">                <span class="keyword">if</span>((i*i*i+j*j*j+k*k*k)==i*<span class="number">100</span>+j*<span class="number">10</span>+k)</span><br><span class="line">                    <span class="built_in">cout</span>&lt;&lt;i&lt;&lt;j&lt;&lt;k&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">           &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="basic-8.-回文数">BASIC-8. 回文数<a title="#basic-8.-回文数" href="#basic-8.-回文数"></a></h2><p>🔔问题描述<br>1221是一个非常特殊的数，它从左边读和从右边读是一样的，编程求所有这样的<strong>四位十进制数</strong>。 <br/><br>📙输出格式<br>按从小到大的顺序输出满足条件的四位十进制数。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">9</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=<span class="number">9</span>;j++)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;i&lt;&lt;j&lt;&lt;j&lt;&lt;i&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="basic-9.-特殊回文数">BASIC-9. 特殊回文数<a title="#basic-9.-特殊回文数" href="#basic-9.-特殊回文数"></a></h2><p>🔔问题描述<br>123321是一个非常特殊的数，它从左边读和从右边读是一样的。<br>输入一个正整数n， 编程求所有这样的<strong>五位和六位十进制数</strong>，<strong>满足各位数字之和等于n</strong> 。<br>📙输入格式<br>输入一行，包含一个正整数n。<br>📙输出格式<br>按从小到大的顺序输出满足条件的整数，每个整数占一行。<br>📙样例输入<br>52<br>📙样例输出<br>899998<br>989989<br>998899<br>📙数据规模和约定<br>1&lt;=n&lt;=54。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">9</span>;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=<span class="number">9</span>;j++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;=<span class="number">9</span>;k++)&#123;</span><br><span class="line">                <span class="keyword">if</span>((i+j+k+j+i)==n)&#123;</span><br><span class="line">                    <span class="built_in">cout</span>&lt;&lt;i&lt;&lt;j&lt;&lt;k&lt;&lt;j&lt;&lt;i&lt;&lt;<span class="built_in">endl</span>; <span class="comment">//五位数</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">9</span>;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=<span class="number">9</span>;j++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;=<span class="number">9</span>;k++)&#123;</span><br><span class="line">                <span class="keyword">if</span>((i+j+k+k+j+i)==n)&#123;</span><br><span class="line">                    <span class="built_in">cout</span>&lt;&lt;i&lt;&lt;j&lt;&lt;k&lt;&lt;k&lt;&lt;j&lt;&lt;i&lt;&lt;<span class="built_in">endl</span>; <span class="comment">//六位数</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="basic-10.-十进制转十六进制">BASIC-10. 十进制转十六进制<a title="#basic-10.-十进制转十六进制" href="#basic-10.-十进制转十六进制"></a></h2><p>🔔问题描述<br>十六进制数是在程序设计时经常要使用到的一种整数的表示方式。它有0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F共16个符号，分别表示十进制数的0至15。十六进制的计数方法是满16进1，所以十进制数16在十六进制中是10，而十进制的17在十六进制中是11，以此类推，十进制的30在十六进制中是1E。<br>给出一个非负整数，将它表示成十六进制的形式。<br>📙输入格式<br>输入包含一个非负整数a，表示要转换的数。<strong>0&lt;=a&lt;=2147483647</strong><br>📙输出格式<br>输出这个整数的16进制表示<br>📙样例输入<br>30<br>📙样例输出<br>1E</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;a;</span><br><span class="line"><span class="keyword">char</span> hex[<span class="number">16</span>]=&#123;<span class="string">'0'</span>,<span class="string">'1'</span>,<span class="string">'2'</span>,<span class="string">'3'</span>,<span class="string">'4'</span>,<span class="string">'5'</span>,<span class="string">'6'</span>,<span class="string">'7'</span>,<span class="string">'8'</span>,<span class="string">'9'</span>,<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'C'</span>,<span class="string">'D'</span>,<span class="string">'E'</span>,<span class="string">'F'</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> num[<span class="number">100</span>];   <span class="comment">//CPU使用时间为0ms，num[8]则为15ms</span></span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(a==<span class="number">0</span>)</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"0"</span>;</span><br><span class="line"><span class="keyword">while</span>(a!=<span class="number">0</span>)&#123;</span><br><span class="line">num[i++]=a%<span class="number">16</span>;</span><br><span class="line">a=a/<span class="number">16</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=i<span class="number">-1</span>;k&gt;=<span class="number">0</span>;k--)&#123;</span><br><span class="line"><span class="keyword">int</span> m=num[k];</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;hex[m]; <span class="comment">//输出是字符</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="basic-11.-十六进制转十进制">BASIC-11. 十六进制转十进制<a title="#basic-11.-十六进制转十进制" href="#basic-11.-十六进制转十进制"></a></h2><p>🔔问题描述<br>从键盘输入一个<strong>不超过8位</strong>的正的十六进制数字符串，将它转换为正的十进制数后输出。<br>注：十六进制数中的10~15分别用大写的英文字母A、B、C、D、E、F表示。<br>📙样例输入<br>FFFF<br>📙样例输出<br>65535</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;s)&#123;</span><br><span class="line">        <span class="keyword">int</span> len=s.length();</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(s[i]&gt;=<span class="string">'A'</span>&amp;&amp;s[i]&lt;=<span class="string">'F'</span>)&#123;</span><br><span class="line">                sum=sum*<span class="number">16</span>+(s[i]-<span class="string">'A'</span>+<span class="number">10</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                sum=sum*<span class="number">16</span>+(s[i]-<span class="string">'0'</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;sum;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="basic-12.-十六进制转八进制">BASIC-12. 十六进制转八进制<a title="#basic-12.-十六进制转八进制" href="#basic-12.-十六进制转八进制"></a></h2><p>🔔问题描述<br>给定n个十六进制正整数，输出它们对应的八进制数。<br>📙输入格式<br>输入的第一行为一个正整数n （1&lt;=n&lt;=10）。<br>接下来n行，每行一个由0~9、大写字母A~F组成的字符串，表示要转换的十六进制正整数，每个十六进制数长度不超过100000。<br>📙输出格式<br>输出n行，每行为输入对应的八进制正整数。<br>【注意】<br>输入的十六进制数不会有前导0，比如012A。<br>输出的八进制数也不能有前导0。<br>📙样例输入<br>2<br>39<br>123ABC<br>📙样例输出<br>71<br>4435274<br>📙【提示】<br>先将十六进制数转换成某进制数，再由某进制数转换成八进制。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">trans</span><span class="params">(<span class="keyword">char</span> a)</span><span class="comment">//十六进制转二进制</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">switch</span>(a)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span><span class="number">'0'</span>:<span class="keyword">return</span> <span class="string">"0000"</span>;</span><br><span class="line"><span class="keyword">case</span><span class="number">'1'</span>:<span class="keyword">return</span> <span class="string">"0001"</span>;</span><br><span class="line"><span class="keyword">case</span><span class="number">'2'</span>:<span class="keyword">return</span> <span class="string">"0010"</span>;</span><br><span class="line"><span class="keyword">case</span><span class="number">'3'</span>:<span class="keyword">return</span> <span class="string">"0011"</span>;</span><br><span class="line"><span class="keyword">case</span><span class="number">'4'</span>:<span class="keyword">return</span> <span class="string">"0100"</span>;</span><br><span class="line"><span class="keyword">case</span><span class="number">'5'</span>:<span class="keyword">return</span> <span class="string">"0101"</span>;</span><br><span class="line"><span class="keyword">case</span><span class="number">'6'</span>:<span class="keyword">return</span> <span class="string">"0110"</span>;</span><br><span class="line"><span class="keyword">case</span><span class="number">'7'</span>:<span class="keyword">return</span> <span class="string">"0111"</span>;</span><br><span class="line"><span class="keyword">case</span><span class="number">'8'</span>:<span class="keyword">return</span> <span class="string">"1000"</span>;</span><br><span class="line"><span class="keyword">case</span><span class="number">'9'</span>:<span class="keyword">return</span> <span class="string">"1001"</span>;</span><br><span class="line"><span class="keyword">case</span><span class="number">'</span>A<span class="number">'</span>:<span class="keyword">return</span> <span class="string">"1010"</span>;</span><br><span class="line">  <span class="keyword">case</span><span class="number">'B</span><span class="number">'</span>:<span class="keyword">return</span> <span class="string">"1011"</span>;</span><br><span class="line"><span class="keyword">case</span><span class="number">'</span>C<span class="number">'</span>:<span class="keyword">return</span> <span class="string">"1100"</span>;</span><br><span class="line"><span class="keyword">case</span><span class="number">'</span>D<span class="number">'</span>:<span class="keyword">return</span> <span class="string">"1101"</span>;</span><br><span class="line"><span class="keyword">case</span><span class="number">'E'</span>:<span class="keyword">return</span> <span class="string">"1110"</span>;</span><br><span class="line"><span class="keyword">case</span><span class="number">'F</span><span class="number">'</span>:<span class="keyword">return</span> <span class="string">"1111"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">string</span> sixteen[<span class="number">10</span>];<span class="comment">//（1&lt;=n&lt;=10）</span></span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;sixteen[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">string</span> eight;</span><br><span class="line"><span class="built_in">string</span> two;</span><br><span class="line"><span class="keyword">char</span> eig;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;sixteen[i].length();j++)</span><br><span class="line">two+=trans(sixteen[i][j]);<span class="comment">//调用函数十六进制字符串里的每个字符逐个转二进制</span></span><br><span class="line"><span class="keyword">int</span> m=two.length()%<span class="number">3</span>;<span class="comment">//一位八进制等于三位二进制</span></span><br><span class="line"><span class="keyword">if</span>(m==<span class="number">1</span>)two.insert(<span class="number">0</span>,<span class="string">"00"</span>);<span class="comment">//如果余1在0位置插入两个0 (便于转换成八进制都凑成三位)</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(m==<span class="number">2</span>)two.insert(<span class="number">0</span>,<span class="string">"0"</span>);<span class="comment">//如果余2在0位置插入一个0</span></span><br><span class="line"><span class="keyword">if</span>(!(two[<span class="number">0</span>]==<span class="string">'0'</span>&amp;&amp;two[<span class="number">1</span>]==<span class="string">'0'</span>&amp;&amp;two[<span class="number">2</span>]==<span class="string">'0'</span>))<span class="comment">//如果insert后的前三位不是都为0</span></span><br><span class="line">&#123;</span><br><span class="line">eig=(two[<span class="number">0</span>]-<span class="string">'0'</span>)*<span class="number">4</span>+(two[<span class="number">1</span>]-<span class="string">'0'</span>)*<span class="number">2</span>+(two[<span class="number">2</span>]); <span class="comment">//4 2 1</span></span><br><span class="line">eight+=eig; <span class="comment">//八进制字符串的第一个字符</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">3</span>;k&lt;two.length();k+=<span class="number">3</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(two.substr(k,<span class="number">3</span>)==<span class="string">"000"</span>)eight+=<span class="string">"0"</span>;<span class="comment">//提取k之后的三个字符(包括k) </span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(two.substr(k,<span class="number">3</span>)==<span class="string">"001"</span>)eight+=<span class="string">"1"</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(two.substr(k,<span class="number">3</span>)==<span class="string">"010"</span>)eight+=<span class="string">"2"</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(two.substr(k,<span class="number">3</span>)==<span class="string">"011"</span>)eight+=<span class="string">"3"</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(two.substr(k,<span class="number">3</span>)==<span class="string">"100"</span>)eight+=<span class="string">"4"</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(two.substr(k,<span class="number">3</span>)==<span class="string">"101"</span>)eight+=<span class="string">"5"</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(two.substr(k,<span class="number">3</span>)==<span class="string">"110"</span>)eight+=<span class="string">"6"</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(two.substr(k,<span class="number">3</span>)==<span class="string">"111"</span>)eight+=<span class="string">"7"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;eight&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="basic-13.-数列排序">BASIC-13. 数列排序<a title="#basic-13.-数列排序" href="#basic-13.-数列排序"></a></h2><p>🔔问题描述<br>给定一个长度为n的数列，将这个数列按从小到大的顺序排列。1&lt;=n&lt;=200<br>📙输入格式<br>第一行为一个整数n。<br>第二行包含n个整数，为待排序的数，每个整数的绝对值小于10000。<br>📙输出格式<br>输出一行，按从小到大的顺序输出排序后的数列。<br>📙样例输入<br>5<br>8 3 6 4 9<br>📙样例输出<br>3 4 6 8 9</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a&lt;b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">200</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    sort(a,a+n,cmp);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;a[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">" "</span>&lt;&lt;a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="basic-14.-时间转换">BASIC-14. 时间转换<a title="#basic-14.-时间转换" href="#basic-14.-时间转换"></a></h2><p>🔔题目描述<br>给定一个以秒为单位的时间t，要求用  “&lt; H&gt; :&lt; M&gt; :&lt; S&gt; ”的格式来表示这个时间。&lt; H&gt; 表示时间，&lt; M&gt; 表示分钟，  而&lt; S&gt; 表示秒，它们都是整数且没有前导的“0”。例如，若t=0，则应输出是“0:0:0”；若t=3661，则输出“1:1:1”。<br>📙输入格式<br>输入只有一行，是一个整数t（0&lt; =t&lt; =86399）。<br>📙输出格式<br>输出只有一行，是以“&lt; H&gt; :&lt; M&gt; :&lt; S&gt; ”的格式所表示的时间，不包括引号。<br>📙样例输入<br>5436<br>📙样例输出<br>1:30:36</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> h=<span class="number">0</span>,m=<span class="number">0</span>,s=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">    h=t/<span class="number">3600</span>;</span><br><span class="line">    t=t%<span class="number">3600</span>;</span><br><span class="line">    m=t/<span class="number">60</span>;</span><br><span class="line">    t=t%<span class="number">60</span>;</span><br><span class="line">    s=t;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;h&lt;&lt;<span class="string">":"</span>&lt;&lt;m&lt;&lt;<span class="string">":"</span>&lt;&lt;s;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="basic-15.-字符串对比">BASIC-15. 字符串对比<a title="#basic-15.-字符串对比" href="#basic-15.-字符串对比"></a></h2><p>🔔题目描述<br>给定两个仅由大写字母或小写字母组成的字符串(长度介于1到10之间)，它们之间的关系是以下4中情况之一：<br>1：两个字符串长度不等。比如  Beijing  和  Hebei<br>2：两个字符串不仅长度相等，而且相应位置上的字符完全一致(区分大小写)，比如  Beijing  和  Beijing<br>3：两个字符串长度相等，相应位置上的字符仅在不区分大小写的前提下才能达到完全一致（也就是说，它并不满足情况2）。比如  beijing  和  BEIjing<br>4：两个字符串长度相等，但是即使是不区分大小写也不能使这两个字符串一致。比如  Beijing  和  Nanjing<br>编程判断输入的两个字符串之间的关系属于这四类中的哪一类，给出所属的类的编号。<br>📙输入格式<br>包括两行，每行都是一个字符串<br>📙输出格式<br>仅有一个数字，表明这两个字符串的关系编号<br>📙样例输入<br>BEIjing<br>beiJing<br>📙样例输出<br>3</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> a,b;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b;</span><br><span class="line">    <span class="keyword">int</span> lena=a.length();</span><br><span class="line">    <span class="keyword">int</span> lenb=b.length();</span><br><span class="line">    <span class="keyword">if</span>(lena!=lenb)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"1"</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> flag=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;lena;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]!=b[i])&#123;</span><br><span class="line">            flag=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(flag==<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"2"</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> flag2=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;lena;i++)&#123;</span><br><span class="line">        a[i]=<span class="built_in">tolower</span>(a[i]);</span><br><span class="line">        b[i]=<span class="built_in">tolower</span>(b[i]);</span><br><span class="line">        <span class="keyword">if</span>(a[i]!=b[i])&#123;</span><br><span class="line">            flag2=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(flag2==<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"3"</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"4"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;普通题 1-15&lt;/p&gt;
    
    </summary>
    
    
      <category term="Lan Qiao" scheme="https://venanastasia.github.io/categories/Lan-Qiao/"/>
    
    
      <category term="刷题" scheme="https://venanastasia.github.io/tags/%E5%88%B7%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>蓝桥杯刷题（BEGIN）</title>
    <link href="https://venanastasia.github.io/2020/01/19/lanqiao01/"/>
    <id>https://venanastasia.github.io/2020/01/19/lanqiao01/</id>
    <published>2020-01-19T14:19:34.000Z</published>
    <updated>2020-02-27T10:00:18.236Z</updated>
    
    <content type="html"><![CDATA[<p>入门题1-4</p><a id="more"></a><ul class="φcz" class="φcz"><li><p><input type="checkbox" disabled="" checked=""><i></i>BEGIN-1. A+B问题</p></li><li><p><input type="checkbox" disabled="" checked=""><i></i>BEGIN-2. 序列求和</p></li></ul><blockquote><p>使用printf输出长整型数： <code>printf(&quot;%I64d&quot;, result); </code></p></blockquote><ul class="φcz"><li><input type="checkbox" disabled="" checked=""><i></i>BEGIN-3. 圆的面积</li></ul><blockquote><p>求PI的公式： <code>PI=atan(1.0)*4;  //#include&lt; cmath&gt;</code></p></blockquote><ul class="φcz"><li><input type="checkbox" disabled="" checked=""><i></i>BEGIN-4. Fibonacci数列<br>🔔问题描述<br>Fibonacci数列列的递推公式为：Fn=Fn-1+Fn-2，其中F1=F2=1。当n比较大时，Fn也非常大，现在我们想知道，Fn除以10007的余数是多少。<br>📙输⼊格式<br>输⼊包含⼀个整数n。<br>📙输出格式<br>输出⼀行，包含一个整数，表示Fn除以10007的余数。<br>说明：在本题中，答案是要求Fn除以10007的余数，因此我们只要能算出这个余数即可，而不需要先计算出Fn的准确值，再将计算的结果除以10007取余数，直接计算余数往往比先算出原数再取余简单。<br>📙样例输⼊<br>10<br>📙样例输出<br>55<br>📙样例输⼊<br>22<br>📙样例输出<br>7704<br>📙数据规模与约定<br>1 &lt;= n &lt;= 1,000,000。</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt; iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1000001</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> F[N];</span><br><span class="line">    F[<span class="number">1</span>]=F[<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">3</span>;i&lt;=<span class="number">1000000</span>;i++)&#123;</span><br><span class="line">        F[i]=(F[i<span class="number">-1</span>]+F[i<span class="number">-2</span>])%<span class="number">10007</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;F[n];</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;入门题1-4&lt;/p&gt;
    
    </summary>
    
    
      <category term="Lan Qiao" scheme="https://venanastasia.github.io/categories/Lan-Qiao/"/>
    
    
      <category term="刷题" scheme="https://venanastasia.github.io/tags/%E5%88%B7%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>Sentence Patterns 05</title>
    <link href="https://venanastasia.github.io/2019/11/19/sentence05/"/>
    <id>https://venanastasia.github.io/2019/11/19/sentence05/</id>
    <published>2019-11-19T05:14:27.000Z</published>
    <updated>2020-04-10T12:50:15.205Z</updated>
    
    <content type="html"><![CDATA[<p>状语从句</p><a id="more"></a><h2 id="how-does-the-book-look-like?">How does the book look like?<a title="#how-does-the-book-look-like?" href="#how-does-the-book-look-like?"></a></h2><p><img src="https://s2.ax1x.com/2019/10/30/KhKb24.png" alt="space" class="φcx"></p><h2 id="how-to-get-one?">How to get one?<a title="#how-to-get-one?" href="#how-to-get-one?"></a></h2><a href="https://shop16653392.m.youzan.com/wscgoods/detail/2xa7l3pn0sp5k?redirect_count=1" title="" target="">Buy it!</a><p>´●_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ٩( ‘ω’ )و  get! _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _●`</p><h1>状语从句</h1><ol><li>as long as</li><li>If...should do</li><li>Just as..., so...</li><li>no more..., than</li><li>now that...</li><li>so that...</li><li>so...that...</li><li>the more..., the more...</li><li>whenever</li></ol><h2 id="1.-as-long-as">1. as long as<a title="#1.-as-long-as" href="#1.-as-long-as"></a></h2><h3 id="as-long-as-+-s.-+v.,-该句型与only-if、on-the-condition-that、provided-(that)意思相同，表未来条件时，要用现在式代替未来式。"><code>as long as + S. +V., 该句型与only if、on the condition that、provided (that)意思相同，表未来条件时，要用现在式代替未来式。</code><a title="#as-long-as-+-s.-+v.,-该句型与only-if、on-the-condition-that、provided-(that)意思相同，表未来条件时，要用现在式代替未来式。" href="#as-long-as-+-s.-+v.,-该句型与only-if、on-the-condition-that、provided-(that)意思相同，表未来条件时，要用现在式代替未来式。"></a></h3><p>很多人认为成功一定会到来，只要他们坚持自己的目标。<br>Many prople believe that success will come, as long as they stick to their goals.</p><p>科技总是会造福人类的，只要我们把它运用到正确的地方上去。<br>Technology will always benefit us, as long as we use it in the right way.</p><p>青山绿水一定会回到我们身边，只要我们采取切实有效的办法来保护环境，比如对高污染工厂实施罚款。<br>Green mountains and clean water will definitely come back to us, as long as we take effective measures to protect the environment, such as imposing fines on high pollution factories.</p><h3 id="as-long-as-还可以用来修饰名词，表示“（尺寸、距离、时间）的长度。"><code>as long as 还可以用来修饰名词，表示“（尺寸、距离、时间）的长度。</code><a title="#as-long-as-还可以用来修饰名词，表示“（尺寸、距离、时间）的长度。" href="#as-long-as-还可以用来修饰名词，表示“（尺寸、距离、时间）的长度。"></a></h3><p>幼年时期的创伤要花数长达数十年的时间才能痊愈。<br>Childhood trauma will take as long as decades to heal.</p><p>大自然需要长达从、数百年的时间来抵消工厂排放的污染物的影响。<br>It will take as long as hundreds of years for nature to offset the effects of pollutants emitted by factories.</p><h2 id="2.-if...should-do">2. If…should do<a title="#2.-if...should-do" href="#2.-if...should-do"></a></h2><h3 id="if-+-s.-+过去式，s.+-could/should/would，此句型用来表示与现在事实相反的假设，if从句要用过去式，主从句用“过去式助动词-+-v.”。"><code>If + S. +过去式，S.+ could/should/would，此句型用来表示与现在事实相反的假设，if从句要用过去式，主从句用“过去式助动词 + V.”。</code><a title="#if-+-s.-+过去式，s.+-could/should/would，此句型用来表示与现在事实相反的假设，if从句要用过去式，主从句用“过去式助动词-+-v.”。" href="#if-+-s.-+过去式，s.+-could/should/would，此句型用来表示与现在事实相反的假设，if从句要用过去式，主从句用“过去式助动词-+-v.”。"></a></h3><p>如果政府官员按他们承诺的那样落实保护环境的措施，那我们的环境早就应该会更好的。<br>If government officials implemented measures to protect the environment as they promised, our environment should have been better.</p><p>如果家长们愿意倾听孩子的想法，给他们足够多的关注，那这些孩子就不会犯罪。<br>If parents were willing to listen to their children’s ideas and give them enough attention, these children would not commit crimes.</p><h2 id="3.-just-as...,-so...">3. Just as…, so…<a title="#3.-just-as...,-so..." href="#3.-just-as...,-so..."></a></h2><h3 id="本句型用来比较两相似的情况，as引导状态状语从句，so也作副词用，表示“也是”，之后接从句，或将主语与主动词对调形成倒装。"><code>本句型用来比较两相似的情况，as引导状态状语从句，so也作副词用，表示“也是”，之后接从句，或将主语与主动词对调形成倒装。</code><a title="#本句型用来比较两相似的情况，as引导状态状语从句，so也作副词用，表示“也是”，之后接从句，或将主语与主动词对调形成倒装。" href="#本句型用来比较两相似的情况，as引导状态状语从句，so也作副词用，表示“也是”，之后接从句，或将主语与主动词对调形成倒装。"></a></h3><h3 id="(just)-as-+-s.-+-v.,so-+-s.-+-v."><code>(Just) as + S. + V.,so + S. + V.</code><a title="#(just)-as-+-s.-+-v.,so-+-s.-+-v." href="#(just)-as-+-s.-+-v.,so-+-s.-+-v."></a></h3><h3 id="(just)-as-+-s.-+-v.,so-+-助动词-+-s."><code>(Just) as + S. + V.,so + 助动词 + S.</code><a title="#(just)-as-+-s.-+-v.,so-+-助动词-+-s." href="#(just)-as-+-s.-+-v.,so-+-助动词-+-s."></a></h3><p>正如我们不会把垃圾丢到我们自己家客厅一样的地板上一样，我们也不应该在公共场所乱丢垃圾。<br>Just as we would not throw garbage on our living room floor, so we should not litter in public places.</p><p>正如我们自己希望得到理解那样，孩子也一样。<br>Just as we hope to be understood, so do children.</p><p>正如我们渴望与外面世界时时刻刻保持紧密联系一样，老年人也渴望。<br>Just as we are eager to stay in close contact with the outside world, so are the elderly.</p><p>正如你希望自己的意见被合作伙伴尊重，对方也一样，所以平等、友好、真诚的沟通是一切合作的基础。<br>Just as you want your opinions to be valued by your partners, so do other people. Therefore, I believe that equality, friendship and effective communication are the foundation of all cooperation.</p><h2 id="4.-no-more...,-than">4. no more…, than<a title="#4.-no-more...,-than" href="#4.-no-more...,-than"></a></h2><h3 id="no-more...than句型表面上看起来是表示不同的比较，但实际上是表示同等关系，用来强调“两者均不……”。"><code>no more...than句型表面上看起来是表示不同的比较，但实际上是表示同等关系，用来强调“两者均不……”。</code><a title="#no-more...than句型表面上看起来是表示不同的比较，但实际上是表示同等关系，用来强调“两者均不……”。" href="#no-more...than句型表面上看起来是表示不同的比较，但实际上是表示同等关系，用来强调“两者均不……”。"></a></h3><p>现在的孩子并没有比几十年前的孩子了解更多性知识。<br>Today’s children do not know more about sex than children decades ago.</p><p>即使被高科技应用包围，现代人并不比以前的人幸福多少。<br>Even if surrounded by high-tech applications, modern people are no more happy than people in the past.</p><p>一个没有新鲜空气的城市不能称之为家园，就像没有食物的草原不能称之为栖息地。<br>A city without fresh air is no more a home than a grassland without food is a habitat.</p><p>没有自由的教育和没有灵魂的身体一样，都是不可持续的。<br>Education without freedom is no more unsustainable than a body without a soul.</p><p>没有相互理解的合作就跟没有交流的婚姻一样，都是不长久的。<br>Cooperation without mutual understanding is no more long-lasting than a marriage without communication.</p><h2 id="5.-now-that...">5. now that…<a title="#5.-now-that..." href="#5.-now-that..."></a></h2><h3 id="now-that引导原因状语从句，用来说明某人决定做某事的理由，通常是对方已知的讯息。"><code>now that引导原因状语从句，用来说明某人决定做某事的理由，通常是对方已知的讯息。</code><a title="#now-that引导原因状语从句，用来说明某人决定做某事的理由，通常是对方已知的讯息。" href="#now-that引导原因状语从句，用来说明某人决定做某事的理由，通常是对方已知的讯息。"></a></h3><p>既然环境已经快速恶化，我们还有什么理由不行动起来。<br>Now that the environment has deteriorated rapidly, we do not have any reason not to act.</p><p>考虑到现在已经有很多人沉迷游戏不能自拔，高科技产品最后会把我们奴役的可能性是存在的。<br>There is a possibility that high-tech products will eventually enslave us, now that many people are addicted to online games.</p><p>考虑到现代人的工作压力越来越大，心理问题越来越该被重视。<br>Now that the work pressure of modern people is getting higher and higher, mental problems should be paid more and more attention.</p><p>考虑到很多孩子对学校里的课程并不感兴趣，教育者应该根据儿童的实际需求设计更有趣味性的课程。<br>Now that many children are not interested in the school, it is true that educators should design more interesting courses based on children’s need.</p><h2 id="6.-so-that...">6. so that…<a title="#6.-so-that..." href="#6.-so-that..."></a></h2><h3 id="s.-+-v.-+-so-that-+-s.-+助动词+-v.，该句型中so-that引导的从句用来表目的，从句中常出现can,-could,-will,-would,-may,-might等助动词，在口语中that可省略。"><code>S. + V. + so that + S. +助动词+ V.，该句型中so that引导的从句用来表目的，从句中常出现can, could, will, would, may, might等助动词，在口语中that可省略。</code><a title="#s.-+-v.-+-so-that-+-s.-+助动词+-v.，该句型中so-that引导的从句用来表目的，从句中常出现can,-could,-will,-would,-may,-might等助动词，在口语中that可省略。" href="#s.-+-v.-+-so-that-+-s.-+助动词+-v.，该句型中so-that引导的从句用来表目的，从句中常出现can,-could,-will,-would,-may,-might等助动词，在口语中that可省略。"></a></h3><p>电影和电视应该减少对暴力的宣扬，这样青少年不至于被误导。<br>Movies and TV shows should reduce the promotion of violence so that teenagers will not be misled.</p><p>现代人要注意自己的饮食习惯，不要摄入太多的脂肪，这样才能保持身体健康。<br>Modern people should pay attention to their eating diets and do not consume too much fat, so that they can maintain good health.</p><p>在与他人合作的过程中，彼此要做到互相尊重，这样合作才是有效的。<br>In the process of working with others, mutual respect must be guaranteed, so that cooperation is effective.</p><p>对环境的保护绝不能停留在喊口号的阶段，而是应该有实际的行动，这样我们就能呼吸到新鲜的空气，迟到没有污染的食物。<br>To protect the environment, we should not simply talk the talk, but should walk the walk, so that we can breathe the fresh air and eat uncontaminated food.</p><h2 id="7.-so...that...">7. so…that…<a title="#7.-so...that..." href="#7.-so...that..."></a></h2><h3 id="so-+-adj./adv.-that-+-s.-+-v.，此句型用来表示“如此……以致于（有……结果）”。"><code>so + adj./adv. that + S. + V.，此句型用来表示“如此……以致于（有……结果）”。</code><a title="#so-+-adj./adv.-that-+-s.-+-v.，此句型用来表示“如此……以致于（有……结果）”。" href="#so-+-adj./adv.-that-+-s.-+-v.，此句型用来表示“如此……以致于（有……结果）”。"></a></h3><p>信息技术变革的步伐如此之快，以至于那些不愿欣然接受变革的人远远落在了后面。<br>The pace of change in information technology is so rapid that it leaves those who do not readily embrace the change far behind.</p><p>普通人对成功是如此的渴望，结果为了达到成功愿意牺牲很多事情，甚至包括自己的良知和健康。<br>Ordinary people are so eager for success that they are willing to sacrifice many things, even including their conscience and health.</p><h3 id="so-+-adj./adv.移到句首时，主要从句的主语与be动词或主动词必须倒装。"><code>so + adj./adv.移到句首时，主要从句的主语与be动词或主动词必须倒装。</code><a title="#so-+-adj./adv.移到句首时，主要从句的主语与be动词或主动词必须倒装。" href="#so-+-adj./adv.移到句首时，主要从句的主语与be动词或主动词必须倒装。"></a></h3><p>我们的环境保护太没有成效，以至于我们被污染的河流和污浊的空气所包围。<br>So inefficient is our environmental protection that we are surrounded by polluted rivers and dirty air.</p><p>我们对青少年心理健康的关注太少，所以很多人不知道青少年为何要犯罪。<br>So little do we pay attention to the mental health of adolescents that many people do not even know why teenagers commit  crimes.</p><h2 id="8.-the-more...,-the-more...">8. the more…, the more…<a title="#8.-the-more...,-the-more..." href="#8.-the-more...,-the-more..."></a></h2><h3 id="the-more-+-s.-+-v.,-the-+-比较级-+-s.-+-v.，该句型如果more后面跟的都是形容词，可以写成这样："><code>the more + S. + V., the + 比较级 + S. + V.，该句型如果more后面跟的都是形容词，可以写成这样：</code><a title="#the-more-+-s.-+-v.,-the-+-比较级-+-s.-+-v.，该句型如果more后面跟的都是形容词，可以写成这样：" href="#the-more-+-s.-+-v.,-the-+-比较级-+-s.-+-v.，该句型如果more后面跟的都是形容词，可以写成这样："></a></h3><p>电子设备的画面越生动，沉溺于虚拟世界的人就越多。<br>The more vivid the picture of the electronic device (is), the more people indulge in the virtual world.</p><h3 id="如果动词为be动词，可以省略，可以写成："><code>如果动词为be动词，可以省略，可以写成：</code><a title="#如果动词为be动词，可以省略，可以写成：" href="#如果动词为be动词，可以省略，可以写成："></a></h3><p>数据显示，工作节奏越快的人，身体状况越糟糕。<br>Statistics show that the more faster the pace of work (is), the worse people’s physical condition (is).</p><h3 id="当然，可以把宾语提到more后面，让more直接跟名词。所以可以写成："><code>当然，可以把宾语提到more后面，让more直接跟名词。所以可以写成：</code><a title="#当然，可以把宾语提到more后面，让more直接跟名词。所以可以写成：" href="#当然，可以把宾语提到more后面，让more直接跟名词。所以可以写成："></a></h3><p>家长让孩子自己做选择的机会越多，孩子的独立性越强。<br>The more opportunities parents give their children to make their own choices, the stronger their independence (is).</p><p>我们对环境问题关注地越多，政府会越快建立保护环境的法律法规。<br>The more attention we pay to the environmental issues, the faster the government introduce laws and regulations to protect the environment.</p><h2 id="9.-whenever">9. whenever<a title="#9.-whenever" href="#9.-whenever"></a></h2><h3 id="mark-twain说过这样一句话：whenever-you-find-that-you-are-on-the-side-of-the-majority,-it-is-time-to-reform.每当你发现跟大多数人站在同一边时，就是改革的时候了。"><code>Mark Twain说过这样一句话：Whenever you find that you are on the side of the majority, it is time to reform.每当你发现跟大多数人站在同一边时，就是改革的时候了。</code><a title="#mark-twain说过这样一句话：whenever-you-find-that-you-are-on-the-side-of-the-majority,-it-is-time-to-reform.每当你发现跟大多数人站在同一边时，就是改革的时候了。" href="#mark-twain说过这样一句话：whenever-you-find-that-you-are-on-the-side-of-the-majority,-it-is-time-to-reform.每当你发现跟大多数人站在同一边时，就是改革的时候了。"></a></h3><h3 id="这个句子中，-whenever是个连词，表示“每当，无论何时”，它可以引导时间状语从句。"><code>这个句子中， whenever是个连词，表示“每当，无论何时”，它可以引导时间状语从句。</code><a title="#这个句子中，-whenever是个连词，表示“每当，无论何时”，它可以引导时间状语从句。" href="#这个句子中，-whenever是个连词，表示“每当，无论何时”，它可以引导时间状语从句。"></a></h3><p>每当看到原本清澈的河水被严重污染，我就感到心碎。<br>Whenever I see the once clear water is heavily polluted, I feel heartbreaking.</p><p>每当孩子厌学时，家长和学校就该反思他们的教育方法。<br>Whenever children are tired of learning, parents and the school should reflect on their teaching methods.</p><p>每当我收到来自电商平台的包裹，我都控制不住为自己生活在数字时代而感到高兴。<br>Whenever I receive a package from an e-commerce platform, I can’t help but feel happy about living in the digital age.</p><p>当你睡不着觉的时候，你可以听一些音乐或者喝一杯热牛奶。<br>Whenever you cannot fall asleep, you can listen to some soft music or drink a glass of hot milk.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;状语从句&lt;/p&gt;
    
    </summary>
    
    
      <category term="English Writing" scheme="https://venanastasia.github.io/categories/English-Writing/"/>
    
    
      <category term="Loving English" scheme="https://venanastasia.github.io/tags/Loving-English/"/>
    
  </entry>
  
  <entry>
    <title>数组和字符串</title>
    <link href="https://venanastasia.github.io/2019/11/14/for-competition02/"/>
    <id>https://venanastasia.github.io/2019/11/14/for-competition02/</id>
    <published>2019-11-14T10:45:48.000Z</published>
    <updated>2020-02-27T09:58:38.989Z</updated>
    
    <content type="html"><![CDATA[<p>Array &amp; String</p><a id="more"></a><h2 id="1.-数组">1. 数组<a title="#1.-数组" href="#1.-数组"></a></h2><blockquote><p>Tips: (1) 在算法竞赛中，常常难以精确计算出需要的数组大小，数组一般会声明得稍大一些。<br>(2) a[n++]=x;<br>(3) 比较大的数组应尽量声明在main函数外，否则程序可能无法运行。</p></blockquote><ul><li>例3-1 开灯问题<br>有n盏灯，编号为1~n。第一个人把所有的灯打开，第2个人按下所有编号为2的倍数的开关（这些灯被关掉），第3个人按下所有编号为3的倍数的开关（其中关掉的灯被打开，开着的灯被关闭）,以此类推。一共有k个人，问最后哪些灯开着？输入n和k，输出开着的灯的编号。k&lt;=n&lt;=1000。<br>样例输入：<br>7 3<br>样例输出：<br>1 5 6 7</li></ul><figure class="highlight c"><figcaption><span>3-1 开灯问题</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 1010</span></span><br><span class="line"><span class="keyword">int</span> a[maxn];     <span class="comment">//用数组a表示灯的编号</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,k,first=<span class="number">1</span>; </span><br><span class="line">   <span class="comment">//标志变量first，可以表示当前要输出的变量是否为第一个。</span></span><br><span class="line">   <span class="comment">//第一个变量前不应有空格，其他变量都有。</span></span><br><span class="line"><span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span>(a));     <span class="comment">//将数组a清零</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n,&amp;k);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)       <span class="comment">//第几个人</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)   <span class="comment">//此人的操作</span></span><br><span class="line"><span class="keyword">if</span>(j%i==<span class="number">0</span>) a[j]=!a[j];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span>(a[i]) </span><br><span class="line">  &#123;</span><br><span class="line"><span class="keyword">if</span>(first) </span><br><span class="line">first=<span class="number">0</span>; </span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>,i);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>例3-2 蛇形填数<br>在n×n方阵里填入1，2，……，n×n，要求填成蛇形。例如，n=4时方阵为：<br>10 11 12 1<br>9 16 13 2<br>8 15 14 3<br>7  6  5 4<br>上面的方阵中，多余的空格只是为了便于观察规律，不必严格输出。n&lt;=8。</li></ul><figure class="highlight c"><figcaption><span>3-2 蛇形填数</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 20</span></span><br><span class="line"><span class="keyword">int</span> a[maxn][maxn];</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,x,y,tot=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span>(a));    <span class="comment">//将数组a清零</span></span><br><span class="line">tot=a[x=<span class="number">0</span>][y=n<span class="number">-1</span>]=<span class="number">1</span>;      <span class="comment">//设置起点为1</span></span><br><span class="line"><span class="keyword">while</span>(tot&lt; n\*n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>(x+<span class="number">1</span>&lt;n &amp;&amp; !a[x+<span class="number">1</span>][y]) a[++x][y]= ++tot;  </span><br><span class="line"><span class="comment">//!a[x+1][y]表示a[x+1][y]==0,判断是否是填过的格子</span></span><br><span class="line"><span class="keyword">while</span>(y<span class="number">-1</span>&gt;=<span class="number">0</span> &amp;&amp; !a[x][y<span class="number">-1</span>]) a[x][--y]= ++tot; </span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(x<span class="number">-1</span>&gt;=<span class="number">0</span> &amp;&amp; !a[x<span class="number">-1</span>][y]) a[--x][y]= ++tot; </span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(y+<span class="number">1</span>&lt;n &amp;&amp; !a[x][y+<span class="number">1</span>]) a[x][++y]= ++tot;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(x=<span class="number">0</span>;x&lt;n;x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(y=<span class="number">0</span>;y&lt;n;y++) <span class="built_in">printf</span>(<span class="string">"%3d"</span>,a[x][y]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Array &amp;amp; String&lt;/p&gt;
    
    </summary>
    
    
      <category term="For competition" scheme="https://venanastasia.github.io/categories/For-competition/"/>
    
      <category term="Beginning Algorithm Contests(2nd)" scheme="https://venanastasia.github.io/categories/For-competition/Beginning-Algorithm-Contests-2nd/"/>
    
    
      <category term="To be professional" scheme="https://venanastasia.github.io/tags/To-be-professional/"/>
    
  </entry>
  
</feed>
